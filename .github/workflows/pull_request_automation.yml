name: Build & Tests

on:
  pull_request:
    branches: [ master, develop ]
    paths-ignore:
        - "**.md"
        - "docs/**"
        - "integrations/**"

jobs:
  linters:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout IntelOwl
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4.0.0
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install -r requirements/test-requirements.txt

    - name: Black formatter
      run: |
        black . --check --diff --exclude "migrations|venv"

    - name: Lint with flake8 (PEP8 enforcer + linter)
      run: |
        flake8 . --config=.flake8 --show-source

    - name: isort
      run: |
        isort . --profile black --filter-files --check-only --diff --skip configuration/ldap_config.py

  tests:
    runs-on: ubuntu-latest
    needs: linters

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout IntelOwl
      uses: actions/checkout@v3

    - name: Prepare Launch
      run: |
        unzip -P infected tests/test_files.zip -d .
        cp docker/env_file_app_template docker/env_file_app
        cp docker/env_file_postgres_template docker/env_file_postgres
        chmod u+x docker/scripts/coverage_test.sh

    - name: Startup script requirements
      run: |
        pip3 install -r requirements/pre-requirements.txt

    - name: Startup script launch (Slow)
      if: contains(github.base_ref, 'master')
      run: |
        cp docker/env_file_integrations_template docker/env_file_integrations
        python3 start.py --all_analyzers ci up --build -d
      env:
        DOCKER_BUILDKIT: 1

    - name: Startup script launch (Fast)
      if: contains(github.base_ref, 'develop')
      run: |
        python3 start.py ci up --build -d
      env:
        DOCKER_BUILDKIT: 1

    - name: Docker debug
      run: |
        docker ps -a

    - name: Setup coverage
      run: |
       docker exec intelowl_uwsgi pip3 install coverage

    - name: "Test: API"
      run: |
        docker/scripts/coverage_test.sh tests.test_api tests.test_auth

    - name: "Test: Cron"
      run: |
        docker/scripts/coverage_test.sh tests.test_generic.CronTests

    - name: "Test: Connectors Manager"
      run: |
        docker/scripts/coverage_test.sh tests.connectors_manager

    - name: "Test: Analyzers Manager (views, serializers)"
      run: |
        docker/scripts/coverage_test.sh tests.analyzers_manager.test_views tests.analyzers_manager.test_serializers

    - name: "Test: Analyzers Manager (observable analyzers)"
      run: |
        docker/scripts/coverage_test.sh tests.analyzers_manager.test_observable_scripts

    - name: "Test: Analyzers Manager (file analyzers)"
      run: |
        docker/scripts/coverage_test.sh tests.analyzers_manager.test_file_scripts

    - name: "Coverage: generate xml and transfer from docker container to host"
      run: |
        docker exec intelowl_uwsgi coverage combine
        docker exec intelowl_uwsgi coverage xml
        docker cp intelowl_uwsgi:/opt/deploy/intel_owl/coverage.xml coverage.xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3.1.0
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true
