# Generated by Django 4.2.8 on 2024-02-08 10:17

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import api_app.defaults
import api_app.fields
import api_app.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [("api_app", "0001_1_initial_squashed")]

    operations = [
        migrations.CreateModel(
            name="AnalyzerConfig",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\w+$",
                                "Your name should match the [A-Za-z0-9_] characters",
                            )
                        ],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("file", "File"), ("observable", "Observable")],
                        max_length=50,
                    ),
                ),
                (
                    "python_module",
                    models.ForeignKey(
                        limit_choices_to={
                            "base_path__in": [
                                "api_app.analyzers_manager.file_analyzers",
                                "api_app.analyzers_manager.observable_analyzers",
                            ]
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)ss",
                        to="api_app.pythonmodule",
                    ),
                ),
                ("description", models.TextField()),
                ("disabled", models.BooleanField(default=False)),
                (
                    "disabled_in_organizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="%(app_label)s_%(class)s_disabled",
                        to="certego_saas_organization.organization",
                    ),
                ),
                ("docker_based", models.BooleanField(default=False)),
                (
                    "observable_supported",
                    api_app.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("ip", "Ip"),
                                ("url", "Url"),
                                ("domain", "Domain"),
                                ("hash", "Hash"),
                                ("generic", "Generic"),
                            ],
                            max_length=30,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "supported_filetypes",
                    api_app.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("application/w-script-file", "Wscript"),
                                ("application/javascript", "Javascript1"),
                                ("application/x-javascript", "Javascript2"),
                                ("text/javascript", "Javascript3"),
                                ("application/x-vbscript", "Vb Script"),
                                ("text/x-ms-iqy", "Iqy"),
                                ("application/vnd.android.package-archive", "Apk"),
                                ("application/x-dex", "Dex"),
                                ("application/onenote", "One Note"),
                                ("application/zip", "Zip1"),
                                ("multipart/x-zip", "Zip2"),
                                ("application/java-archive", "Java"),
                                ("text/rtf", "Rtf1"),
                                ("application/rtf", "Rtf2"),
                                ("application/x-dosexec", "Dos"),
                                ("application/x-sharedlib", "Shared Lib"),
                                ("application/x-executable", "Exe"),
                                ("application/x-elf", "Elf"),
                                ("application/octet-stream", "Octet"),
                                ("application/vnd.tcpdump.pcap", "Pcap"),
                                ("application/pdf", "Pdf"),
                                ("text/html", "Html"),
                                ("application/x-mspublisher", "Pub"),
                                (
                                    "application/vnd.ms-excel.addin.macroEnabled",
                                    "Excel Macro1",
                                ),
                                (
                                    "application/vnd.ms-excel.sheet.macroEnabled.12",
                                    "Excel Macro2",
                                ),
                                ("application/vnd.ms-excel", "Excel1"),
                                ("application/excel", "Excel2"),
                                (
                                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                    "Doc",
                                ),
                                ("application/xml", "Xml1"),
                                ("text/xml", "Xml2"),
                                ("application/encrypted", "Encrypted"),
                                ("text/plain", "Plain"),
                                ("text/csv", "Csv"),
                                (
                                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                    "Pptx",
                                ),
                                ("application/msword", "Word1"),
                                (
                                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                    "Word2",
                                ),
                                ("application/vnd.ms-powerpoint", "Powerpoint"),
                                ("application/vnd.ms-office", "Office"),
                                ("application/x-binary", "Binary"),
                                ("application/x-macbinary", "Mac1"),
                                ("application/mac-binary", "Mac2"),
                                ("application/x-mach-binary", "Mac3"),
                                ("application/x-zip-compressed", "Compress1"),
                                ("application/x-compressed", "Compress2"),
                                ("application/vnd.ms-outlook", "Outlook"),
                                ("message/rfc822", "Eml"),
                                ("application/pkcs7-signature", "Pkcs7"),
                                ("application/x-pkcs7-signature", "Xpkcs7"),
                                ("multipart/mixed", "Mixed"),
                                ("text/x-shellscript", "X Shellscript"),
                            ],
                            max_length=90,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "not_supported_filetypes",
                    api_app.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("application/w-script-file", "Wscript"),
                                ("application/javascript", "Javascript1"),
                                ("application/x-javascript", "Javascript2"),
                                ("text/javascript", "Javascript3"),
                                ("application/x-vbscript", "Vb Script"),
                                ("text/x-ms-iqy", "Iqy"),
                                ("application/vnd.android.package-archive", "Apk"),
                                ("application/x-dex", "Dex"),
                                ("application/onenote", "One Note"),
                                ("application/zip", "Zip1"),
                                ("multipart/x-zip", "Zip2"),
                                ("application/java-archive", "Java"),
                                ("text/rtf", "Rtf1"),
                                ("application/rtf", "Rtf2"),
                                ("application/x-dosexec", "Dos"),
                                ("application/x-sharedlib", "Shared Lib"),
                                ("application/x-executable", "Exe"),
                                ("application/x-elf", "Elf"),
                                ("application/octet-stream", "Octet"),
                                ("application/vnd.tcpdump.pcap", "Pcap"),
                                ("application/pdf", "Pdf"),
                                ("text/html", "Html"),
                                ("application/x-mspublisher", "Pub"),
                                (
                                    "application/vnd.ms-excel.addin.macroEnabled",
                                    "Excel Macro1",
                                ),
                                (
                                    "application/vnd.ms-excel.sheet.macroEnabled.12",
                                    "Excel Macro2",
                                ),
                                ("application/vnd.ms-excel", "Excel1"),
                                ("application/excel", "Excel2"),
                                (
                                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                    "Doc",
                                ),
                                ("application/xml", "Xml1"),
                                ("text/xml", "Xml2"),
                                ("application/encrypted", "Encrypted"),
                                ("text/plain", "Plain"),
                                ("text/csv", "Csv"),
                                (
                                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                    "Pptx",
                                ),
                                ("application/msword", "Word1"),
                                (
                                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                    "Word2",
                                ),
                                ("application/vnd.ms-powerpoint", "Powerpoint"),
                                ("application/vnd.ms-office", "Office"),
                                ("application/x-binary", "Binary"),
                                ("application/x-macbinary", "Mac1"),
                                ("application/mac-binary", "Mac2"),
                                ("application/x-mach-binary", "Mac3"),
                                ("application/x-zip-compressed", "Compress1"),
                                ("application/x-compressed", "Compress2"),
                                ("application/vnd.ms-outlook", "Outlook"),
                                ("message/rfc822", "Eml"),
                                ("application/pkcs7-signature", "Pkcs7"),
                                ("application/x-pkcs7-signature", "Xpkcs7"),
                                ("multipart/mixed", "Mixed"),
                                ("text/x-shellscript", "X Shellscript"),
                            ],
                            max_length=90,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("run_hash", models.BooleanField(default=False)),
                (
                    "run_hash_type",
                    models.CharField(
                        blank=True,
                        choices=[("md5", "Md5"), ("sha256", "Sha256")],
                        max_length=10,
                    ),
                ),
                (
                    "health_check_status",
                    models.BooleanField(default=True, editable=False),
                ),
                (
                    "health_check_task",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="healthcheck_for_%(class)s",
                        to="django_celery_beat.periodictask",
                    ),
                ),
                (
                    "soft_time_limit",
                    models.IntegerField(
                        default=60,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("routing_key", models.CharField(default="default", max_length=50)),
                (
                    "maximum_tlp",
                    models.CharField(
                        choices=[
                            ("CLEAR", "Clear"),
                            ("GREEN", "Green"),
                            ("AMBER", "Amber"),
                            ("RED", "Red"),
                        ],
                        default="RED",
                        max_length=50,
                    ),
                ),
            ],
            options={"abstract": False, "ordering": ["name", "disabled"]},
        ),
        migrations.AddIndex(
            model_name="analyzerconfig",
            index=models.Index(
                fields=["python_module", "disabled"],
                name="analyzers_m_python__3e6166_idx",
            ),
        ),
        migrations.RenameIndex(
            model_name="analyzerconfig",
            new_name="analyzers_m_python__657cda_idx",
            old_name="analyzers_m_python__3e6166_idx",
        ),
        migrations.CreateModel(
            name="AnalyzerReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("FAILED", "Failed"),
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("SUCCESS", "Success"),
                            ("KILLED", "Killed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("report", models.JSONField(default=dict)),
                (
                    "errors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=512),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("start_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("task_id", models.UUIDField()),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="api_app.job",
                    ),
                ),
                ("sent_to_bi", models.BooleanField(default=False, editable=False)),
                ("parameters", models.JSONField(default={}, editable=False)),
                (
                    "config",
                    models.ForeignKey(
                        "AnalyzerConfig",
                        related_name="reports",
                        on_delete=models.CASCADE,
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="analyzerreport",
            unique_together={("config", "job")},
        ),
        migrations.AddIndex(
            model_name="analyzerreport",
            index=models.Index(
                fields=["sent_to_bi", "-start_time"], name="analyzerreportsBISearch"
            ),
        ),
        migrations.AlterField(
            model_name="analyzerreport",
            name="parameters",
            field=models.JSONField(editable=False),
        ),
    ]
