# Generated by Django 4.2.15 on 2024-10-14 07:24

from django.db import migrations


def migrate_urlhaus(apps, schema_editor):
    AnalyzerConfig = apps.get_model("analyzers_manager", "AnalyzerConfig")
    ac = AnalyzerConfig.objects.filter(name="URLhaus").first()
    if not ac:
        return
    ac.mapping_data_model = {
        "urlhaus_reference": "external_references",
        "$malicious": "evaluation",
        "urls.url": "related_threats",
    }
    ac.save()


def migrate_maxmind(apps, schema_editor):
    AnalyzerConfig = apps.get_model("analyzers_manager", "AnalyzerConfig")
    ac = AnalyzerConfig.objects.filter(name="MaxMindGeoIP").first()
    if not ac:
        return
    ac.mapping_data_model = {
        "country.iso_code": "country_code",
        "registered_country_code.iso_code": "registered_country_code",
        "autonomous_system_number": "asn",
        "autonomous_system_organization": "isp",
    }
    ac.save()


def migrate_abuse_ipdb(apps, schema_editor):
    AnalyzerConfig = apps.get_model("analyzers_manager", "AnalyzerConfig")
    ac = AnalyzerConfig.objects.filter(name="AbuseIPDB").first()
    if not ac:
        return
    ac.mapping_data_model = {
        "data.countryCode": "country_code",
        "permalink": "external_references",
        "data.hostnames": "resolutions",
        "data.isp": "isp",
        "categories_found": "tags",
    }
    ac.save()


class Migration(migrations.Migration):

    dependencies = [
        ("analyzers_manager", "0134_analyzerconfig_mapping_data_model"),
    ]

    operations = [
        migrations.RunPython(migrate_maxmind, migrations.RunPython.noop),
        migrations.RunPython(migrate_abuse_ipdb, migrations.RunPython.noop),
        migrations.RunPython(migrate_urlhaus, migrations.RunPython.noop),
    ]
