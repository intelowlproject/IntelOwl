# Generated by Django 4.1.10 on 2023-07-28 12:44

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import api_app.defaults
import api_app.interfaces
import api_app.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("api_app", "0035_pluginconfig_repositories"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("playbooks_manager", "0018_playbookconfig_scan_check_time_and_more"),
        ("certego_saas_organization", "0001_initial"),
        ("django_celery_beat", "0018_improve_crontab_helptext"),
    ]

    operations = [
        migrations.CreateModel(
            name="IngestorConfig",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\w+$",
                                "Your name should match the [A-Za-z0-9_] characters",
                            )
                        ],
                    ),
                ),
                ("description", models.TextField()),
                ("disabled", models.BooleanField(default=False)),
                ("python_module", models.CharField(db_index=True, max_length=120)),
                (
                    "config",
                    models.JSONField(
                        default=api_app.defaults.config_default,
                        validators=[api_app.validators.validate_config],
                    ),
                ),
                (
                    "disabled_in_organizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="%(app_label)s_%(class)s_disabled",
                        to="certego_saas_organization.organization",
                    ),
                ),
                (
                    "periodic_task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ingestor",
                        to="django_celery_beat.periodictask",
                    ),
                ),
                (
                    "playbook_to_execute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingestors",
                        to="playbooks_manager.playbookconfig",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ingestors",
                        to="django_celery_beat.crontabschedule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingestors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name", "disabled"],
                "abstract": False,
            },
            bases=(models.Model, api_app.interfaces.CreateJobsFromPlaybookInterface),
        ),
        migrations.CreateModel(
            name="IngestorReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("FAILED", "Failed"),
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("SUCCESS", "Success"),
                            ("KILLED", "Killed"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "errors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=512),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("start_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("report", models.JSONField(default=list)),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
                ("task_id", models.UUIDField(blank=True, null=True)),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="ingestors_manager.ingestorconfig",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)ss",
                        to="api_app.job",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
            },
        ),
        migrations.AddIndex(
            model_name="ingestorconfig",
            index=models.Index(
                fields=["python_module", "disabled"],
                name="ingestors_m_python__5c8ce0_idx",
            ),
        ),
    ]
