# This file is a part of IntelOwl https://github.com/intelowlproject/IntelOwl
# See the file 'LICENSE' for copying permission.

# Generated by Django 2.2.14 on 2020-08-24 09:38

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models

import api_app.defaults
import api_app.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=50, unique=True)),
                ("color", models.CharField(max_length=7, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source", models.CharField(default="none", max_length=50)),
                ("is_sample", models.BooleanField(default=False)),
                ("md5", models.CharField(max_length=32)),
                ("observable_name", models.CharField(blank=True, max_length=512)),
                (
                    "observable_classification",
                    models.CharField(blank=True, max_length=12),
                ),
                ("file_name", models.CharField(blank=True, max_length=50)),
                ("file_mimetype", models.CharField(blank=True, max_length=80)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("running", "running"),
                            ("reported_without_fails", "reported_without_fails"),
                            ("reported_with_fails", "reported_with_fails"),
                            ("failed", "failed"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                (
                    "analyzers_requested",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=128),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("run_all_available_analyzers", models.BooleanField(default=False)),
                (
                    "analyzers_to_execute",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=128),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "analysis_reports",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=list, null=True
                    ),
                ),
                ("received_request_time", models.DateTimeField(auto_now_add=True)),
                ("finished_analysis_time", models.DateTimeField(blank=True, null=True)),
                ("force_privacy", models.BooleanField(default=False)),
                ("disable_external_analyzers", models.BooleanField(default=False)),
                (
                    "errors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=900),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, upload_to=api_app.defaults.file_directory_path
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="jobs", to="api_app.Tag"
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["md5", "status"], name="api_app_job_md5_4d2c5e_idx"
            ),
        ),
    ]
