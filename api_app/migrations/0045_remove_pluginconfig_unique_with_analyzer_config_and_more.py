# Generated by Django 4.1.10 on 2023-08-25 09:42

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api_app", "0044_alter_pluginconfig_analyzer_config_and_more"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="pluginconfig",
            name="unique_with_analyzer_config",
        ),
        migrations.RemoveConstraint(
            model_name="pluginconfig",
            name="unique_with_connector_config",
        ),
        migrations.RemoveConstraint(
            model_name="pluginconfig",
            name="unique_with_visualizer_config",
        ),
        migrations.RemoveConstraint(
            model_name="pluginconfig",
            name="unique_with_ingestor_config",
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("owner", "for_organization", "parameter", "analyzer_config"),
                name="plugin_config_unique_with_analyzer_config_owner",
                condition=models.Q(owner__isnull=False),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("for_organization", "parameter", "analyzer_config"),
                name="plugin_config_unique_with_analyzer_config",
                condition=models.Q(owner__isnull=True),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("owner", "for_organization", "parameter", "connector_config"),
                name="plugin_config_unique_with_connector_config_owner",
                condition=models.Q(owner__isnull=False),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("for_organization", "parameter", "connector_config"),
                name="plugin_config_unique_with_connector_config",
                condition=models.Q(owner__isnull=True),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("owner", "for_organization", "parameter", "visualizer_config"),
                name="plugin_config_unique_with_visualizer_config_owner",
                condition=models.Q(owner__isnull=False),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("for_organization", "parameter", "visualizer_config"),
                name="plugin_config_unique_with_visualizer_config",
                condition=models.Q(owner__isnull=True),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("owner", "for_organization", "parameter", "ingestor_config"),
                name="plugin_config_unique_with_ingestor_config_owner",
                condition=models.Q(owner__isnull=False),
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                fields=("for_organization", "parameter", "ingestor_config"),
                name="plugin_config_unique_with_ingestor_config",
                condition=models.Q(owner__isnull=True),
            ),
        ),
    ]
