# Generated by Django 4.1.10 on 2023-09-14 10:29

import django.db.models.deletion
from django.db import migrations, models


def migrate(apps, schema_editor):
    PythonModule = apps.get_model("api_app", "PythonModule")
    PythonModule.objects.create(
        module="self_analyzable.SelfAnalyzable",
        base_path="api_app.pivots_manager.pivots",
    )
    PythonModule.objects.create(
        module="base.Base", base_path="api_app.pivots_manager.pivots"
    )


def reverse_migrate(apps, schema_editor):
    PythonModule = apps.get_model("api_app", "PythonModule")
    PythonModule.objects.get(
        module="self_analyzable.SelfAnalyzable",
        base_path="api_app.pivots_manager.pivots",
    ).delete()
    PythonModule.objects.get(
        module="base.Base", base_path="api_app.pivots_manager.pivots"
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("pivots_manager", "0006_alter_pivotconfig_analyzer_config_and_more"),
        ("api_app", "0045_remove_pluginconfig_unique_with_analyzer_config_and_more"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="pluginconfig",
            name="plugin_config_no_config_all_null",
        ),
        migrations.RemoveIndex(
            model_name="pluginconfig",
            name="api_app_plu_ingesto_d7a20e_idx",
        ),
        migrations.RemoveIndex(
            model_name="pluginconfig",
            name="api_app_plu_analyze_e62bf2_idx",
        ),
        migrations.RemoveIndex(
            model_name="pluginconfig",
            name="api_app_plu_connect_da4207_idx",
        ),
        migrations.RemoveIndex(
            model_name="pluginconfig",
            name="api_app_plu_visuali_54319e_idx",
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="pivot_config",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="pivots_manager.pivotconfig",
            ),
        ),
        migrations.AlterField(
            model_name="job",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "pending"),
                    ("running", "running"),
                    ("analyzers_running", "analyzers_running"),
                    ("analyzers_completed", "analyzers_completed"),
                    ("connectors_running", "connectors_running"),
                    ("connectors_completed", "connectors_completed"),
                    ("pivots_running", "pivots_running"),
                    ("pivots_completed", "pivots_completed"),
                    ("visualizers_running", "visualizers_running"),
                    ("visualizers_completed", "visualizers_completed"),
                    ("reported_without_fails", "reported_without_fails"),
                    ("reported_with_fails", "reported_with_fails"),
                    ("killed", "killed"),
                    ("failed", "failed"),
                ],
                default="pending",
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="pythonmodule",
            name="base_path",
            field=models.CharField(
                choices=[
                    (
                        "api_app.analyzers_manager.observable_analyzers",
                        "Observable Analyzer",
                    ),
                    ("api_app.analyzers_manager.file_analyzers", "File Analyzer"),
                    ("api_app.connectors_manager.connectors", "Connector"),
                    ("api_app.ingestors_manager.ingestors", "Ingestor"),
                    ("api_app.visualizers_manager.visualizers", "Visualizer"),
                    ("api_app.pivots_manager.pivots", "Pivot"),
                ],
                db_index=True,
                max_length=120,
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("analyzer_config__isnull", True),
                    ("connector_config__isnull", True),
                    ("visualizer_config__isnull", True),
                    ("ingestor_config__isnull", True),
                    ("pivot_config__isnull", True),
                    _connector="OR",
                ),
                name="plugin_config_no_config_all_null",
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                condition=models.Q(("owner__isnull", False)),
                fields=("owner", "for_organization", "parameter", "pivot_config"),
                name="plugin_config_unique_with_pivot_config_owner",
            ),
        ),
        migrations.AddConstraint(
            model_name="pluginconfig",
            constraint=models.UniqueConstraint(
                condition=models.Q(("owner__isnull", True)),
                fields=("for_organization", "parameter", "pivot_config"),
                name="plugin_config_unique_with_pivot_config",
            ),
        ),
        migrations.RunPython(migrate, reverse_migrate),
    ]
