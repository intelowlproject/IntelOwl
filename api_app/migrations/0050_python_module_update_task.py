# Generated by Django 4.1.10 on 2023-10-02 09:28

import django.db.models.deletion
from django.db import migrations, models


def migrate(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    PythonModule = apps.get_model("api_app", "PythonModule")
    for task in PeriodicTask.objects.filter(name__endswith="Analyzer"):
        pm_pk = task.analyzer.python_module
        if isinstance(pm_pk, str):
            pm = PythonModule.objects.get(module=pm_pk)
        else:
            pm = PythonModule.objects.get(pk=pm_pk.pk)
        task.name = pm.base_path + "." + pm.module + "Update"
        task.save()
        if pm.update_task:
            task.delete()
        else:
            pm.update_task = task
            pm.update_schedule = task.crontab
            pm.save()


class Migration(migrations.Migration):
    dependencies = [
        ("api_app", "0049_remove_pluginconfig_api_app_plu_owner_i_691c79_idx_and_more"),
        ("analyzers_manager", "0033_analyzerconfig_update_schedule_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="pythonmodule",
            name="update_schedule",
            field=models.ForeignKey(
                to="django_celery_beat.crontabschedule",
                on_delete=django.db.models.deletion.SET_NULL,
                null=True,
                blank=True,
                related_name="update_for_%(class)s",
            ),
        ),
        migrations.AddField(
            model_name="pythonmodule",
            name="update_task",
            field=models.OneToOneField(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="update_for_%(class)s",
                to="django_celery_beat.periodictask",
            ),
        ),
        migrations.RunPython(migrate, migrations.RunPython.noop),
    ]
