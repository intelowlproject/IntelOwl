# Generated by Django 4.2.8 on 2024-01-09 14:31
import django
from django.db import migrations, models


def migrate(apps, schema_editor):
    PluginConfig = apps.get_model("api_app", "PluginConfig")
    VisualizerConfig = apps.get_model("visualizers_manager", "VisualizerConfig")
    AnalyzerConfig = apps.get_model("analyzers_manager", "AnalyzerConfig")
    ConnectorConfig = apps.get_model("connectors_manager", "ConnectorConfig")
    IngestorConfig = apps.get_model("ingestors_manager", "IngestorConfig")
    name_visualizer = VisualizerConfig.objects.filter(
        name=models.OuterRef("old_visualizer_config")
    ).values_list("pk")[:1]
    name_analyzer = AnalyzerConfig.objects.filter(
        name=models.OuterRef("old_analyzer_config")
    ).values_list("pk")[:1]
    name_connector = ConnectorConfig.objects.filter(
        name=models.OuterRef("old_connector_config")
    ).values_list("pk")[:1]
    name_ingestor = IngestorConfig.objects.filter(
        name=models.OuterRef("old_ingestor_config")
    ).values_list("pk")[:1]
    PluginConfig.objects.update(
        visualizer_config=models.Subquery(name_visualizer),
        connector_config=models.Subquery(name_connector),
        analyzer_config=models.Subquery(name_analyzer),
        ingestor_config=models.Subquery(name_ingestor),
    )


class Migration(migrations.Migration):
    dependencies = [
        ("visualizers_manager", "0036_3_change_primary_key"),
        ("analyzers_manager", "0058_3_change_primary_key"),
        ("connectors_manager", "0029_3_change_primary_key"),
        ("ingestors_manager", "0016_3_change_primary_key"),
        ("api_app", "0057_2_change_primary_key"),
    ]

    operations = [
        migrations.RenameField(
            model_name="pluginconfig",
            old_name="visualizer_config",
            new_name="old_visualizer_config",
        ),
        migrations.RenameField(
            model_name="pluginconfig",
            old_name="analyzer_config",
            new_name="old_analyzer_config",
        ),
        migrations.RenameField(
            model_name="pluginconfig",
            old_name="connector_config",
            new_name="old_connector_config",
        ),
        migrations.RenameField(
            model_name="pluginconfig",
            old_name="ingestor_config",
            new_name="old_ingestor_config",
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="visualizer_config",
            field=models.ForeignKey(
                default=None,
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="visualizers_manager.visualizerconfig",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="analyzer_config",
            field=models.ForeignKey(
                default=None,
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="analyzers_manager.analyzerconfig",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="connector_config",
            field=models.ForeignKey(
                default=None,
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="connectors_manager.connectorconfig",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="ingestor_config",
            field=models.ForeignKey(
                default=None,
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="ingestors_manager.ingestorconfig",
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            migrate,
        ),
        migrations.RemoveField(model_name="pluginconfig", name="old_visualizer_config"),
        migrations.RemoveField(
            model_name="pluginconfig",
            name="old_analyzer_config",
        ),
        migrations.RemoveField(
            model_name="pluginconfig",
            name="old_connector_config",
        ),
        migrations.RemoveField(
            model_name="pluginconfig",
            name="old_ingestor_config",
        ),
    ] + [
        migrations.RunSQL(
            # contraints + column
            f'ALTER TABLE "api_app_job_{field}" ADD COLUMN "{model}_id2" BIGINT '
            f'CONSTRAINT "job_{field}_constraint_pk" REFERENCES "{table}_{model}"("id") '
            "DEFERRABLE INITIALLY DEFERRED;"
            f'SET CONSTRAINTS "job_{field}_constraint_pk" IMMEDIATE;'
            # populate
            f'UPDATE "api_app_job_{field}" as "SURROGATA" SET {model}_id2 = ('
            f'SELECT "CONFIG"."id" FROM "{table}_{model}" AS "CONFIG" WHERE "CONFIG"."name" = '
            f'"SURROGATA"."{model}_id"'
            ') WHERE "SURROGATA"."job_id" IS NOT NULL; '
            # unique
            f'ALTER TABLE "api_app_job_{field}" ADD CONSTRAINT '
            f'"job_{field}_constraint_pk_unique" UNIQUE("job_id", "{model}_id2");'
            # delete old field
            f'ALTER TABLE "api_app_job_{field}" DROP COLUMN "{model}_id";'
            # rename
            f'ALTER TABLE "api_app_job_{field}" RENAME COLUMN "{model}_id2" TO "{model}_id";'
        )
        for field, table, model in [
            ("analyzers_to_execute", "analyzers_manager", "analyzerconfig"),
            ("analyzers_requested", "analyzers_manager", "analyzerconfig"),
            ("connectors_to_execute", "connectors_manager", "connectorconfig"),
            ("connectors_requested", "connectors_manager", "connectorconfig"),
            ("visualizers_to_execute", "visualizers_manager", "visualizerconfig"),
        ]
    ]
