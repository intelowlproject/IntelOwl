# Generated by Django 4.2.8 on 2024-02-08 11:43

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# api_app.pivots_manager.migrations.0008_data_migrate
# api_app.pivots_manager.migrations.0012_alter_pivotconfig_unique_together_and_more
# api_app.pivots_manager.migrations.0014_pivotconfig_no_field_to_compare
# api_app.pivots_manager.migrations.0017_pivotconfig_routing_key_pivotconfig_soft_time_limit


class Migration(migrations.Migration):
    initial = True
    replaces = [
        # ("pivots_manager", "0001_initial"),
        # (
        #     "pivots_manager",
        #     "0002_rename_pivot_manag_startin_21e74a_idx_pivots_mana_startin_694120_idx_and_more",
        # ),
        # ("pivots_manager", "0003_alter_pivot_ending_job_alter_pivot_starting_job"),
        # ("pivots_manager", "0004_alter_pivotconfig_analyzer_config_and_more"),
        # ("pivots_manager", "0005_pivotconfig_pivot_config_no_config_all_null"),
        # ("pivots_manager", "0006_alter_pivotconfig_analyzer_config_and_more"),
        # ("pivots_manager", "0007_pivotreport_rename_pivot_pivotmap_and_more"),
        # ("pivots_manager", "0008_data_migrate"),
        # ("pivots_manager", "0009_alter_pivotconfig_python_module"),
        # ("pivots_manager", "0010_alter_pivotconfig_execute_on_python_module"),
        # ("pivots_manager", "0011_alter_pivotconfig_name"),
        # ("pivots_manager", "0012_alter_pivotconfig_unique_together_and_more"),
        # ("pivots_manager", "0013_pivotconfig_pivot_config_no_null_configs"),
        # ("pivots_manager", "0014_pivotconfig_no_field_to_compare"),
        # ("pivots_manager", "0015_alter_pivotmap_pivot_config"),
        # ("pivots_manager", "0016_alter_pivotconfig_options_and_more"),
        # ("pivots_manager", "0017_pivotconfig_routing_key_pivotconfig_soft_time_limit"),
        # ("pivots_manager", "0018_pivotconfig_health_check_task"),
        # ("pivots_manager", "0019_pivotconfig_health_check_status"),
        # ("pivots_manager", "0020_pivotreport_parameters"),
        # ("pivots_manager", "0021_pivotreport_sent_to_bi"),
        # ("pivots_manager", "0022_pivotreport_pivotreportsbisearch"),
    ]

    dependencies = [
        ("api_app", "0001_1_initial_squashed"),
        ("analyzers_manager", "0001_initial_squashed"),
        ("connectors_manager", "0001_initial_squashed"),
    ]

    operations = [
        migrations.CreateModel(
            name="PivotConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("disabled", models.BooleanField(default=False)),
                (
                    "python_module",
                    models.ForeignKey(
                        limit_choices_to={"base_path": "api_app.pivots_manager.pivots"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)ss",
                        to="api_app.pythonmodule",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\w+$",
                                "Your name should match the [A-Za-z0-9_] characters",
                            )
                        ],
                    ),
                ),
                (
                    "disabled_in_organizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="%(app_label)s_%(class)s_disabled",
                        to="certego_saas_organization.organization",
                    ),
                ),
                (
                    "health_check_status",
                    models.BooleanField(default=True, editable=False),
                ),
                (
                    "health_check_task",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="healthcheck_for_%(class)s",
                        to="django_celery_beat.periodictask",
                    ),
                ),
                (
                    "soft_time_limit",
                    models.IntegerField(
                        default=60,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("routing_key", models.CharField(default="default", max_length=50)),
                (
                    "related_connector_configs",
                    models.ManyToManyField(
                        blank=True,
                        related_name="pivots",
                        to="connectors_manager.connectorconfig",
                    ),
                ),
                (
                    "related_analyzer_configs",
                    models.ManyToManyField(
                        blank=True,
                        related_name="pivots",
                        to="analyzers_manager.analyzerconfig",
                    ),
                ),
            ],
        ),
        migrations.AlterModelOptions(
            name="pivotconfig",
            options={"ordering": ["name", "disabled"]},
        ),
        migrations.AddIndex(
            model_name="pivotconfig",
            index=models.Index(
                fields=["python_module", "disabled"],
                name="pivots_mana_python__75b643_idx",
            ),
        ),
        migrations.CreateModel(
            name="PivotReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("FAILED", "Failed"),
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("SUCCESS", "Success"),
                            ("KILLED", "Killed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("report", models.JSONField(default=dict)),
                (
                    "errors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=512),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("start_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("task_id", models.UUIDField()),
                ("sent_to_bi", models.BooleanField(default=False, editable=False)),
                ("parameters", models.JSONField(editable=False)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="api_app.job",
                    ),
                ),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="pivots_manager.pivotconfig",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="pivotreport",
            unique_together={("config", "job")},
        ),
        migrations.AddIndex(
            model_name="pivotreport",
            index=models.Index(
                fields=["sent_to_bi", "-start_time"], name="pivotreportsBISearch"
            ),
        ),
        migrations.CreateModel(
            name="PivotMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ending_job",
                    models.ForeignKey(
                        "api_app.Job",
                        on_delete=models.CASCADE,
                        related_name="pivot_parents",
                        editable=False,
                    ),
                ),
                (
                    "pivot_config",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pivots",
                        to="pivots_manager.pivotconfig",
                    ),
                ),
                (
                    "starting_job",
                    models.ForeignKey(
                        "api_app.Job",
                        on_delete=models.CASCADE,
                        related_name="pivot_children",
                        editable=False,
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="pivotmap",
            unique_together={("starting_job", "pivot_config", "ending_job")},
        ),
    ]
