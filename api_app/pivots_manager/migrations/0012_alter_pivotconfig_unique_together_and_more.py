# Generated by Django 4.1.10 on 2023-09-15 13:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


def migrate(apps, schema_editor):
    PivotConfig = apps.get_model("pivots_manager", "PivotConfig")
    ConnectorConfig = apps.get_model("connectors_manager", "ConnectorConfig")
    AnalyzerConfig = apps.get_model("analyzers_manager", "AnalyzerConfig")
    for config in PivotConfig.objects.all():
        module = config.execute_on_python_module
        if module.base_path in [
            "api_app.analyzers_manager.observable_analyzers",
            "api_app.analyzers_manager.file_analyzers",
        ]:
            config.analyzer_config = AnalyzerConfig.objects.filter(
                python_module=module
            ).first()
        elif module.base_path == "api_app.connectors_manager.connectors":
            config.connector_config = ConnectorConfig.objects.filter(
                python_module=module
            ).first()
        else:
            raise RuntimeError(f"Base path {module.base_path} not valid")
        config.save()


def reverse_migrate(apps, schema_editor):
    PivotConfig = apps.get_model("pivots_manager", "PivotConfig")
    for config in PivotConfig.objects.all():
        config.execute_on_python_module = (
            config.analyzer_config or config.connector_config
        ).python_module
        config.save()


class Migration(migrations.Migration):
    dependencies = [
        ("analyzers_manager", "0042_alter_analyzerconfig_python_module"),
        ("connectors_manager", "0022_alter_connectorconfig_python_module"),
        ("pivots_manager", "0011_alter_pivotconfig_name"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="pivotconfig",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="pivotconfig",
            name="related_analyzer_config",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pivots",
                to="analyzers_manager.analyzerconfig",
            ),
        ),
        migrations.AddField(
            model_name="pivotconfig",
            name="related_connector_config",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pivots",
                to="connectors_manager.connectorconfig",
            ),
        ),
        migrations.RunPython(migrate, reverse_migrate),
        migrations.AlterField(
            model_name="pivotconfig",
            name="name",
            field=models.CharField(
                max_length=100,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^\\w+$", "Your name should match the [A-Za-z0-9_] characters"
                    )
                ],
            ),
        ),
        migrations.AddConstraint(
            model_name="pivotconfig",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("related_analyzer_config__isnull", True),
                    ("related_connector_config__isnull", True),
                    _connector="OR",
                ),
                name="pivot_config_all_null_configs",
            ),
        ),
        migrations.RemoveField(
            model_name="pivotconfig",
            name="execute_on_python_module",
        ),
    ]
