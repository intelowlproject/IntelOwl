# Generated by Django 4.2.17 on 2025-02-26 14:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("data_model_manager", "0008_domaindatamodel_reliability_and_more"),
        (
            "analyzables_manager",
            "0003_analyzable_analyzables_classif_adf7ca_idx_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserIPWildCardEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "decay_progression",
                    models.IntegerField(
                        choices=[
                            (0, "Linear"),
                            (1, "Inverse Exponential"),
                            (2, "Fixed"),
                        ],
                        default=2,
                    ),
                ),
                ("decay_timedelta_days", models.PositiveIntegerField(default=0)),
                (
                    "next_decay",
                    models.DateTimeField(
                        db_index=True,
                        default=None,
                        editable=False,
                        null=True,
                        blank=True,
                    ),
                ),
                ("decay_times", models.PositiveIntegerField(default=0, editable=False)),
                ("start_ip", models.GenericIPAddressField()),
                ("end_ip", models.GenericIPAddressField()),
                (
                    "analyzables",
                    models.ManyToManyField(
                        editable=False,
                        limit_choices_to={"classification": "ip"},
                        related_name="user_ip_wildcard_events",
                        to="analyzables_manager.analyzable",
                    ),
                ),
                (
                    "data_model",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ip_wildcard_events",
                        to="data_model_manager.ipdatamodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyzable_ip_wildcard_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "start_ip", "end_ip")},
            },
        ),
        migrations.CreateModel(
            name="UserDomainWildCardEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "decay_progression",
                    models.IntegerField(
                        choices=[
                            (0, "Linear"),
                            (1, "Inverse Exponential"),
                            (2, "Fixed"),
                        ],
                        default=2,
                    ),
                ),
                ("decay_timedelta_days", models.PositiveIntegerField(default=0)),
                (
                    "next_decay",
                    models.DateTimeField(
                        db_index=True,
                        default=None,
                        editable=False,
                        null=True,
                        blank=True,
                    ),
                ),
                ("decay_times", models.PositiveIntegerField(default=0, editable=False)),
                ("query", models.CharField(editable=False, max_length=100)),
                (
                    "analyzables",
                    models.ManyToManyField(
                        editable=False,
                        limit_choices_to={"classification__in": ["domain", "url"]},
                        related_name="user_domain_wildcard_events",
                        to="analyzables_manager.analyzable",
                    ),
                ),
                (
                    "data_model",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domain_wildcard_events",
                        to="data_model_manager.domaindatamodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyzable_domain_wildcard_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "query")},
            },
        ),
        migrations.CreateModel(
            name="UserAnalyzableEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "next_decay",
                    models.DateTimeField(
                        db_index=True,
                        default=None,
                        editable=False,
                        null=True,
                        blank=True,
                    ),
                ),
                ("decay_times", models.PositiveIntegerField(default=0, editable=False)),
                ("data_model_object_id", models.PositiveIntegerField(editable=False)),
                (
                    "decay_progression",
                    models.IntegerField(
                        choices=[
                            (0, "Linear"),
                            (1, "Inverse Exponential"),
                            (2, "Fixed"),
                        ],
                        default=0,
                    ),
                ),
                ("decay_timedelta_days", models.PositiveIntegerField(default=7)),
                (
                    "analyzable",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_events",
                        to="analyzables_manager.analyzable",
                    ),
                ),
                (
                    "data_model_content_type",
                    models.ForeignKey(
                        editable=False,
                        limit_choices_to={"app_label": "data_model_manager"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyzable_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "analyzable")},
            },
        ),
    ]
