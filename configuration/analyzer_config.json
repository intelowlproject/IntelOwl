{
  "APKiD_Scan_APK_DEX_JAR": {
    "type": "file",
    "supported_filetypes": [
      "application/zip",
      "application/java-archive",
      "application/vnd.android.package-archive",
      "application/x-dex"
    ],
    "python_module": "apkid.APKiD",
    "description": "APKiD identifies many compilers, packers, obfuscators, and other weird stuff from an APK or DEX file."
  },
  "AbuseIPDB": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "check if an ip was reported on AbuseIPDB",
    "requires_configuration": true,
    "python_module": "abuseipdb.AbuseIPDB"
  },
  "ActiveDNS_Classic": {
    "type": "observable",
    "observable_supported": ["ip", "domain"],
    "external_service": true,
    "description": "Retrieve current domain resolution with default DNS",
    "python_module": "active_dns.ActiveDNS",
    "additional_config_params": {
      "service": "classic"
    }
  },
  "ActiveDNS_CloudFlare": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "Retrieve current domain resolution with CloudFlare DoH (DNS over HTTPS)",
    "python_module": "active_dns.ActiveDNS",
    "additional_config_params": {
      "service": "cloudflare"
    }
  },
  "ActiveDNS_CloudFlare_Malware": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "Detect malicious domains thanks to CloudFlare DoH Malware Filter",
    "python_module": "active_dns.ActiveDNS",
    "additional_config_params": {
      "service": "cloudflare_malware"
    }
  },
  "ActiveDNS_Google": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "Retrieve current domain resolution with Google DoH (DNS over HTTPS)",
    "python_module": "active_dns.ActiveDNS",
    "additional_config_params": {
      "service": "google"
    }
  },
  "Auth0": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against the Auth0 API",
    "requires_configuration": true,
    "python_module": "auth0.Auth0"
  },
  "BoxJS_Scan_JavaScript": {
    "type": "file",
    "supported_filetypes": [
      "application/x-javascript",
      "application/javascript",
      "text/javascript"
    ],
    "python_module": "boxjs_scan.BoxJS",
    "description": "A tool for studying JavaScript malware"
  },
  "CheckDMARC": {
    "type": "observable",
    "observable_supported": ["domain"],
    "description": "An SPF and DMARC DNS records validator",
    "python_module": "checkdmarc.CheckDMARC"
  },
  "CIRCLPassiveDNS": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "external_service": true,
    "description": "scan an observable against the CIRCL Passive DNS DB",
    "requires_configuration": true,
    "python_module": "circl_pdns.CIRCL_PDNS"
  },
  "CIRCLPassiveSSL": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an observable against the CIRCL Passive SSL DB",
    "requires_configuration": true,
    "python_module": "circl_pssl.CIRCL_PSSL"
  },
  "Capa_Info": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "python_module": "capa_info.CapaInfo",
    "description": "capa detects capabilities in executable files"
  },
  "Censys_Search": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP address against Censys View API",
    "requires_configuration": true,
    "python_module": "censys.Censys",
    "additional_config_params": {
      "censys_analysis": "search"
    }
  },
  "Cuckoo_Scan": {
    "type": "file",
    "disabled": false,
    "decription": "scan a file on a Cuckoo instance",
    "requires_configuration": true,
    "python_module": "cuckoo_scan.CuckooAnalysis",
    "additional_config_params": {
      "api_key_name": "CUCKOO_API_KEY",
      "max_post_tries": 5,
      "max_poll_tries": 20
    }
  },
  "Cymru_Hash_Registry_Get_File": {
    "type": "file",
    "run_hash": true,
    "external_service": true,
    "description": "Check if a particular file is known to be malware by Team Cymru",
    "python_module": "cymru_run"
  },
  "Cymru_Hash_Registry_Get_Observable": {
    "type": "observable",
    "observable_supported": ["hash"],
    "external_service": true,
    "description": "Check if a particular hash is available in the malware hash registry of Team Cymru",
    "python_module": "cymru.Cymru"
  },
  "DNSDB": {
    "type": "observable",
    "observable_supported": ["domain", "url", "ip"],
    "external_service": true,
    "description": "scan an observable against the Passive DNS Farsight Database",
    "requires_configuration": true,
    "python_module": "dnsdb.DNSdb"
  },
  "Doc_Info": {
    "type": "file",
    "supported_filetypes": [
      "application/msword",
      "application/vnd.ms-office",
      "application/vnd.ms-excel.addin.macroEnabled",
      "application/x-mspublisher",
      "application/vnd.ms-powerpoint",
      "application/vnd.ms-excel",
      "application/vnd.ms-excel.sheet.macroEnabled.12",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
      "text/x-ms-iqy",
      "application/excel",
      "text/xml",
      "application/xml",
      "application/zip"
    ],
    "decription": "static generic document analysis",
    "python_module": "doc_info.DocInfo"
  },
  "Doc_Info_Experimental": {
    "type": "file",
    "supported_filetypes": [
      "application/msword",
      "application/vnd.ms-office",
      "application/vnd.ms-excel.addin.macroEnabled",
      "application/x-mspublisher",
      "application/vnd.ms-powerpoint",
      "application/vnd.ms-excel",
      "application/vnd.ms-excel.sheet.macroEnabled.12",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
      "text/x-ms-iqy",
      "application/excel",
      "text/xml",
      "application/xml"
    ],
    "decription": "static document analysis with new features to analyze XLM macros, encrypted macros and more",
    "python_module": "doc_info.DocInfo",
    "additional_config_params": {
        "experimental": true
    }
  },
  "File_Info": {
    "type": "file",
    "description": "basic static analysis, extracts metadata and hashes",
    "python_module": "file_info.FileInfo"
  },
  "Fortiguard": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "external_service": true,
    "description": "scan an observable with the Fortiguard URL Analyzer",
    "python_module": "fortiguard.Fortiguard"
  },
  "GoogleSafebrowsing": {
    "type": "observable",
    "observable_supported": ["domain", "url", "ip"],
    "external_service": true,
    "description": "scan an observable against GoogleSafeBrowsing DB",
    "requires_configuration": true,
    "python_module": "googlesf.GoogleSF"
  },
  "GreyNoise": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against the Greynoise API (requires API key)",
    "requires_configuration": true,
    "python_module": "greynoise.GreyNoise",
    "additional_config_params": {
      "greynoise_api_version": "v2",
      "api_key_name": "GREYNOISE_API_KEY"
    }
  },
  "GreyNoiseAlpha": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against the Alpha Greynoise API (no API key required)",
    "python_module": "greynoise.GreyNoise",
    "additional_config_params": {
      "greynoise_api_version": "v1"
    }
  },
  "HoneyDB_Get": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "HoneyDB IP lookup service",
    "requires_configuration": true,
    "python_module": "honeydb.HoneyDB",
    "additional_config_params": {
      "api_key_name": "HONEYDB_API_KEY",
      "api_id_name": "HONEYDB_API_ID",
      "honeydb_analysis": "ip_query"
    }
  },
  "HoneyDB_Scan_Twitter": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against HoneyDB.ioâ€™s Twitter Threat Feed",
    "requires_configuration": true,
    "python_module": "honeydb.HoneyDB",
    "additional_config_params": {
      "api_key_name": "HONEYDB_API_KEY",
      "api_id_name": "HONEYDB_API_ID",
      "honeydb_analysis": "scan_twitter"
    }
  },
  "Hunter": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "Scans a domain name and returns set of data about the organisation, the email address found and additional information about the people owning those email addresses",
    "requires_configuration": true,
    "python_module": "hunter.Hunter",
    "additional_config_params": {
      "api_key_name": "HUNTER_API_KEY"
    }
  },
  "HybridAnalysis_Get_File": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on HybridAnalysis sandbox reports",
    "requires_configuration": true,
    "python_module": "ha_get.HybridAnalysisGet"
  },
  "HybridAnalysis_Get_Observable": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "search an observable in the HybridAnalysis sandbox reports",
    "requires_configuration": true,
    "python_module": "ha_get.HybridAnalysisGet"
  },
  "IntelX_Phonebook": {
    "type": "observable",
    "observable_supported": ["ip", "url", "domain", "hash"],
    "description": "Phonebook alike search against IntelX API",
    "external_service": true,
    "requires_configuration": true,
    "python_module": "intelx.IntelX",
    "additional_config_params": {
      "api_key_name": "INTELX_API_KEY",
      "rows_limit": 100
    }
  },
  "Intezer_Scan": {
    "type": "file",
    "external_service": true,
    "supported_filetypes": ["application/x-dosexec"],
    "leaks_info": true,
    "description": "scan a file on Intezer",
    "requires_configuration": true,
    "python_module": "intezer_scan.IntezerScan"
  },
  "MISP": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "scan an observable on a custom MISP instance",
    "requires_configuration": true,
    "python_module": "misp.MISP",
    "additional_config_params": {
      "api_key_name": "MISP_KEY",
      "url_key_name": "MISP_URL"
    }
  },
  "MISPFIRST": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "scan an observable on the FIRST MISP instance",
    "requires_configuration": true,
    "python_module": "misp.MISP",
    "additional_config_params": {
      "api_key_name": "FIRST_MISP_API",
      "url_key_name": "FIRST_MISP_URL"
    }
  },
  "MISPFIRST_Check_Hash": {
    "type": "file",
    "run_hash": true,
    "description": "check a file hash on the FIRST MISP instance",
    "requires_configuration": true,
    "python_module": "misp.MISP",
    "additional_config_params": {
      "api_key_name": "FIRST_MISP_API",
      "url_key_name": "FIRST_MISP_URL"
    }
  },
  "MISP_Check_Hash": {
    "type": "file",
    "run_hash": true,
    "description": "check a file hash on a MISP instance",
    "requires_configuration": true,
    "python_module": "misp.MISP"
  },
  "MalwareBazaar_Get_File": {
    "type": "file",
    "run_hash": true,
    "external_service": true,
    "description": "Check if a particular malware sample is known to MalwareBazaar",
    "python_module": "mb_get.MB_GET"
  },
  "MalwareBazaar_Get_Observable": {
    "type": "observable",
    "observable_supported": ["hash"],
    "external_service": true,
    "description": "Check if a particular malware hash is known to MalwareBazaar",
    "python_module": "mb_get.MB_GET"
  },
  "MaxMindGeoIP": {
    "type": "observable",
    "observable_supported": ["ip"],
    "description": "extract GeoIP info for an IP",
    "python_module": "maxmind.Maxmind"
  },
  "ONYPHE": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url"],
    "external_service": true,
    "description": "search an observable in the ONYPHE",
    "requires_configuration": true,
    "python_module": "onyphe.Onyphe",
    "additional_config_params": {
      "api_key_name": "ONYPHE_KEY"
    }
  },
  "OTXQuery": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "scan an observable on Alienvault OTX",
    "requires_configuration": true,
    "python_module": "otx.OTX",
    "additional_config_params": {
      "verbose": false
    }
  },
  "OTX_Check_Hash": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "decsription": "check file hash on OTX Alienvault",
    "requires_configuration": true,
    "python_module": "otx.OTX",
    "additional_config_params": {
      "verbose": false
    }
  },
  "PDF_Info": {
    "type": "file",
    "supported_filetypes": ["application/pdf"],
    "description": "static PDF analysis",
    "python_module": "pdf_info.PDFInfo"
  },
  "PE_Info": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "description": "static PE analysis",
    "python_module": "pe_info.PEInfo"
  },
  "PEframe_Scan": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "python_module": "peframe.PEframe",
    "description": "Perform static analysis on Portable Executable malware and malicious MS Office documents"
  },
  "Pulsedive_Active_IOC": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "Scan indicators and retrieve results from Pulsedive's API",
    "python_module": "pulsedive.Pulsedive",
    "additional_config_params": {
      "api_key_name": "PULSEDIVE_API_KEY",
      "active_scan": true
    }
  },
  "Quark_Engine_APK": {
    "type": "file",
    "supported_filetypes": [
      "application/zip",
      "application/java-archive",
      "application/vnd.android.package-archive",
      "application/x-dex"
    ],
    "python_module": "quark_engine.QuarkEngine",
    "description": "An Obfuscation-Neglect Android Malware Scoring System"
  },
  "Robtex_Forward_PDNS_Query": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "external_service": true,
    "description": "scan a domain against the Robtex Passive DNS DB",
    "python_module": "robtex.Robtex",
    "additional_config_params": {
      "robtex_analysis": "forward_pdns"
    }
  },
  "Robtex_IP_Query": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "get IP info from Robtex",
    "python_module": "robtex.Robtex",
    "additional_config_params": {
      "robtex_analysis": "ip_query"
    }
  },
  "Robtex_Reverse_PDNS_Query": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against the Robtex Passive DNS DB",
    "python_module": "robtex.Robtex",
    "additional_config_params": {
      "robtex_analysis": "reverse_pdns"
    }
  },
  "Rtf_Info": {
    "type": "file",
    "supported_filetypes": ["text/rtf", "application/rtf"],
    "description": "static RTF analysis",
    "python_module": "rtf_info.RTFInfo"
  },
  "Securitytrails_Details": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "scan a domain against securitytrails API for general details",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails",
    "additional_config_params": {
      "securitytrails_analysis": "current",
      "securitytrails_current_type": "details"
    }
  },
  "Securitytrails_History_DNS": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "scan a domain against securitytrails API for historical DNS",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails",
    "additional_config_params": {
      "securitytrails_analysis": "history",
      "securitytrails_history_analysis": "dns"
    }
  },
  "Securitytrails_History_WHOIS": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "scan a domain against securitytrails API for historical WHOIS",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails",
    "additional_config_params": {
      "securitytrails_analysis": "history",
      "securitytrails_history_analysis": "whois"
    }
  },
  "Securitytrails_IP_Neighbours": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against securitytrails API for neighbour IPs",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails"
  },
  "Securitytrails_Subdomains": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "scan a domain against securitytrails API for subdomains",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails",
    "additional_config_params": {
      "securitytrails_analysis": "current",
      "securitytrails_current_type": "subdomains"
    }
  },
  "Securitytrails_Tags": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "scan a domain against securitytrails API for tags",
    "requires_configuration": true,
    "python_module": "securitytrails.SecurityTrails",
    "additional_config_params": {
      "securitytrails_analysis": "current",
      "securitytrails_current_type": "tags"
    }
  },
  "Shodan_Honeyscore": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against Shodan Honeyscore API",
    "requires_configuration": true,
    "python_module": "shodan.Shodan",
    "additional_config_params": {
      "shodan_analysis": "honeyscore"
    }
  },
  "Shodan_Search": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "scan an IP against Shodan Search API",
    "requires_configuration": true,
    "python_module": "shodan.Shodan",
    "additional_config_params": {
      "shodan_analysis": "search"
    }
  },
  "Signature_Info": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "description": "PE signature extractor",
    "python_module": "signatureinfo_run.SignatureInfo"
  },
  "Strings_Info_Classic": {
    "type": "file",
    "description": "strings extraction",
    "python_module": "strings_info.StringsInfo",
    "additional_config_params": {
      "max_number_of_strings": 300,
      "rank_strings": false
    }
  },
  "SpeakEasy": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "description": "speakeasy emulation report",
    "python_module": "speakeasy_emulation.SpeakEasy"
  },
  "Strings_Info_ML": {
    "type": "file",
    "description": "strings extraction plus strings ranking based on Machine Learning",
    "python_module": "strings_info.StringsInfo",
    "additional_config_params": {
      "max_number_of_strings": 200,
      "rank_strings": true
    }
  },
  "TalosReputation": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "check an IP reputation from Talos downloaded IP list",
    "python_module": "talos.Talos"
  },
  "Threatminer_PDNS": {
    "type": "observable",
    "observable_supported": ["ip", "domain"],
    "external_service": true,
    "description": "retrieve PDNS data from Threatminer API",
    "python_module": "threatminer.Threatminer",
    "additional_config_params": {
      "rt_value": 2
    }
  },
  "Threatminer_Reports_Tagging": {
    "type": "observable",
    "observable_supported": ["ip", "domain"],
    "external_service": true,
    "description": "retrieve reports from Threatminer API",
    "python_module": "threatminer.Threatminer",
    "additional_config_params": {
      "rt_value": 6
    }
  },
  "Threatminer_Subdomains": {
    "type": "observable",
    "observable_supported": ["domain"],
    "external_service": true,
    "description": "retrieve subdomains from Threatminer API",
    "python_module": "threatminer.Threatminer",
    "additional_config_params": {
      "rt_value": 5
    }
  },
  "Thug_HTML_Info_linuxchrome26": {
    "type": "file",
    "supported_filetypes": ["text/html"],
    "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
    "python_module": "thug_file.ThugFile",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "linuxchrome26"
    }
  },
  "Thug_HTML_Info_nexuschrome18": {
    "type": "file",
    "supported_filetypes": ["text/html"],
    "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
    "python_module": "thug_file.ThugFile",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "nexuschrome18"
    }
  },
  "Thug_HTML_Info_osx10chrome19": {
    "type": "file",
    "supported_filetypes": ["text/html"],
    "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
    "python_module": "thug_file.ThugFile",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "osx10chrome19"
    }
  },
  "Thug_HTML_Info_winxpie60_FULL_SCAN": {
    "type": "file",
    "supported_filetypes": ["text/html"],
    "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
    "python_module": "thug_file.ThugFile",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "winxpie60"
    }
  },
  "Thug_HTML_Info_winxpie60_SIMPLE_SCAN": {
    "type": "file",
    "supported_filetypes": ["text/html"],
    "description": "Perform hybrid dynamic/static analysis on a saved HTML page",
    "python_module": "thug_file.ThugFile",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": false,
      "enable_awis": false,
      "user_agent": "winxpie60"
    }
  },
  "Thug_URL_Info_linuxchrome26": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "description": "Perform hybrid dynamic/static analysis on a URL",
    "python_module": "thug_url.ThugUrl",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "linuxchrome26"
    }
  },
  "Thug_URL_Info_nexuschrome18": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "description": "Perform hybrid dynamic/static analysis on a URL",
    "python_module": "thug_url.ThugUrl",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "nexuschrome18"
    }
  },
  "Thug_URL_Info_osx10chrome19": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "description": "Perform hybrid dynamic/static analysis on a URL",
    "python_module": "thug_url.ThugUrl",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "osx10chrome19"
    }
  },
  "Thug_URL_Info_winxpie60_FULL_SCAN": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "description": "Perform hybrid dynamic/static analysis on a URL",
    "python_module": "thug_url.ThugUrl",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": true,
      "enable_awis": true,
      "user_agent": "winxpie60"
    }
  },
  "Thug_URL_Info_winxpie60_SIMPLE_SCAN": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "description": "Perform hybrid dynamic/static analysis on a URL",
    "python_module": "thug_url.ThugUrl",
    "requires_configuration": true,
    "additional_config_params": {
      "dom_events": "click,mouseover",
      "use_proxy": false,
      "proxy": "",
      "enable_image_processing_analysis": false,
      "enable_awis": false,
      "user_agent": "winxpie60"
    }
  },
  "TorProject": {
    "type": "observable",
    "observable_supported": ["ip"],
    "external_service": true,
    "description": "check if an IP is a Tor Exit Node",
    "python_module": "tor.Tor"
  },
  "Tranco": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "external_service": true,
    "description": "check if a domain is in the last Tranco ranking top sites list",
    "python_module": "tor.Tor"
  },
  "UnpacMe_EXE_Unpacker": {
    "type": "file",
    "supported_filetypes": ["application/x-dosexec"],
    "description": "UnpacMe unpacker",
    "python_module": "unpac_me.UnpacMe",
    "additional_config_params": {
      "api_key_name": "UNPAC_ME_API_KEY",
      "private": false,
      "max_tries": 30
    }
  },
  "URLhaus": {
    "type": "observable",
    "observable_supported": ["domain", "url"],
    "external_service": true,
    "description": "Query a domain or URL against URLhaus API",
    "python_module": "urlhaus.URLHaus"
  },
  "VirusTotal_v2_Get_File": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on VirusTotal using old API endpoints",
    "requires_configuration": true,
    "python_module": "vt2_scan.VirusTotalv2ScanFile",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "VirusTotal_v2_Get_Observable": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "search an observable in the VirusTotal DB using the old API endpoints",
    "requires_configuration": true,
    "python_module": "vt2_get.VirusTotalv2",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "VirusTotal_v2_Scan_File": {
    "type": "file",
    "external_service": true,
    "leaks_info": true,
    "description": "scan a file on VirusTotal using old API endpoints",
    "requires_configuration": true,
    "python_module": "vt2_scan.VirusTotalv2ScanFile",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "VirusTotal_v3_Get_File": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on VirusTotal",
    "requires_configuration": true,
    "python_module": "vt3_scan.VirusTotalv3ScanFile",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "VirusTotal_v3_Get_File_And_Rescan_If_Old": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on VirusTotal and rescan it if it is old",
    "requires_configuration": true,
    "python_module": "vt3_scan.VirusTotalv3ScanFile",
    "additional_config_params": {
        "api_key_name": "VT_KEY",
        "force_active_scan_if_old": true
    }
  },
  "VirusTotal_v3_Get_File_And_Scan": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on VirusTotal. If not already available, send the sample and perform a new scan",
    "requires_configuration": true,
    "python_module": "vt3_scan.VirusTotalv3ScanFile",
    "additional_config_params": {
      "api_key_name": "VT_KEY",
      "force_active_scan": true
    }
  },
  "VirusTotal_v3_Get_File_And_Scan_Or_Rescan_If_Old": {
    "type": "file",
    "external_service": true,
    "run_hash": true,
    "description": "check file hash on VirusTotal. If it is already available, rescan if it is old. If it is not available, send the sample and perform a new scan",
    "requires_configuration": true,
    "python_module": "vt3_scan.VirusTotalv3ScanFile",
    "additional_config_params": {
        "api_key_name": "VT_KEY",
        "force_active_scan": true,
        "force_active_scan_if_old": true
    }
  },
  "VirusTotal_v3_Get_Observable": {
    "type": "observable",
    "observable_supported": ["ip", "domain", "url", "hash"],
    "external_service": true,
    "description": "search an observable in the VirusTotal DB",
    "requires_configuration": true,
    "python_module": "vt3_get.VirusTotalv3",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "VirusTotal_v3_Scan_File": {
    "type": "file",
    "external_service": true,
    "leaks_info": true,
    "description": "scan a file on VirusTotal",
    "requires_configuration": true,
    "python_module": "vt3_scan.VirusTotalv3ScanFile",
    "additional_config_params": {
      "api_key_name": "VT_KEY"
    }
  },
  "Whoisxmlapi": {
    "type": "observable",
    "observable_supported": ["ip", "domain"],
    "external_service": true,
    "description": "the WHOIS record data, of a domain name, an IP address, or an email address",
    "requires_configuration": true,
    "python_module": "whoisxmlapi.Whoisxmlapi",
    "additional_config_params": {
      "api_key_name": "WHOISXMLAPI_KEY"
    }
  },
  "Yara_Scan_Community": {
    "type": "file",
    "description": "scan a file with community yara rules",
    "python_module": "yara_scan.YaraScan",
    "additional_config_params": {
      "directories_with_rules": ["/opt/deploy/yara/rules"]
    }
  },
  "Xlm_Macro_Deobfuscator": {
    "type": "file",
    "supported_filetypes": [
      "application/vnd.ms-excel.addin.macroEnabled",
      "application/x-mspublisher",
      "application/vnd.ms-excel",
      "application/vnd.ms-excel.sheet.macroEnabled.12",
      "application/excel",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/zip"
    ],
    "decription": "Xlm macro deobfuscator",
    "python_module": "xlm_macro_deobfuscator.XlmMacroDeobfuscator",
    "additional_config_params": {
        "passwords_to_check": ["agenzia", "inps", "coronavirus"]
    }
  },
  "Yara_Scan_Florian": {
    "type": "file",
    "description": "scan a file with Neo23x0 yara rules",
    "python_module": "yara_scan.YaraScan",
    "additional_config_params": {
      "directories_with_rules": ["/opt/deploy/yara/signature-base/yara"],
      "git_repo_main_dir": ["/opt/deploy/yara/signature-base"]
    }
  },
  "Yara_Scan_Intezer": {
    "type": "file",
    "description": "scan a file with Intezer yara rules",
    "python_module": "yara_scan.YaraScan",
    "additional_config_params": {
      "directories_with_rules": ["/opt/deploy/yara/intezer_rules"]
    }
  },
  "Yara_Scan_McAfee": {
    "type": "file",
    "description": "scan a file with McAfee yara rules",
    "python_module": "yara_scan.YaraScan",
    "additional_config_params": {
      "git_repo_main_dir": ["/opt/deploy/yara/mcafee_rules"],
      "directories_with_rules": [
        "/opt/deploy/yara/mcafee_rules/APT",
        "/opt/deploy/yara/mcafee_rules/RAT",
        "/opt/deploy/yara/mcafee_rules/malware",
        "/opt/deploy/yara/mcafee_rules/miners",
        "/opt/deploy/yara/mcafee_rules/ransomware",
        "/opt/deploy/yara/mcafee_rules/stealer"
      ]
    }
  }
}
