openapi: 3.0.3
info:
  title: IntelOwl API specification
  version: 5.2.2
paths:
  /api/analyze_file:
    post:
      operationId: analyze_file_create
      description:
        This endpoint allows to start a Job related for a single File.
        Retained for retro-compatibility
      tags:
        - analyze_file
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileAnalysis"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/FileAnalysis"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileAnalysis"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisResponse"
          description: ""
  /api/analyze_multiple_files:
    post:
      operationId: analyze_multiple_files_create
      description: This endpoint allows to start Jobs related to multiple Files
      tags:
        - analyze_multiple_files
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultipleFiles"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MultipleFiles"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultipleFiles"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponseList'
          description: ''
  /api/analyze_multiple_observables:
    post:
      operationId: analyze_multiple_observables_create
      description: |-
        This endpoint allows to start Jobs related to multiple observables.
                         Observable parameter must be composed like this:
                         [(<observable_classification>, <observable_name>), ...]
      tags:
        - analyze_multiple_observables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultipleObservable"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MultipleObservable"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultipleObservable"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponseList'
          description: ''
  /api/analyze_observable:
    post:
      operationId: analyze_observable_create
      description:
        This endpoint allows to start a Job related to an observable. Retained
        for retro-compatibility
      tags:
        - analyze_observable
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObservableAnalysis"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ObservableAnalysis"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ObservableAnalysis"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisResponse"
          description: ""
  /api/analyzer/{name}/healthcheck:
    get:
      operationId: analyzer_healthcheck_retrieve
      description:
        "Health Check: if server instance associated with plugin is up
        or not"
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      tags:
        - analyzer
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginHealthCheckSuccessResponse'
          description: ''
  /api/analyzer/{name}/update:
    post:
      operationId: analyzer_update_create
      description: Update plugin with latest configuration
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - analyzer
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginUpdateSuccessResponse'
          description: ''
  /api/ask_analysis_availability:
    post:
      operationId: ask_analysis_availability_create
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect
      tags:
        - ask_analysis_availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobAvailability"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/JobAvailability"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/JobAvailability"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AskAnalysisAvailabilitySuccessResponse"
          description: ""
  /api/ask_multi_analysis_availability:
    post:
      operationId: ask_multi_analysis_availability_create
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect.
            NOTE: This API is similar to ask_analysis_availability, but it allows multiple
            md5s to be checked at the same time.
      tags:
        - ask_multi_analysis_availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultiJobAvailabilityList"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MultiJobAvailabilityList"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiJobAvailabilityList"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AskAnalysisAvailabilitySuccessResponseList"
          description: ""
  /api/auth/apiaccess:
    get:
      operationId: auth_apiaccess_retrieve
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
        - auth
      security:
        - durinAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_apiaccess_create
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      security:
        - durinAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: auth_apiaccess_destroy
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
        - auth
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/auth/google:
    get:
      operationId: auth_google_retrieve
      description: This endpoint redirects to Google OAuth login.
      tags:
      - auth
      security:
      - durinAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/google-callback:
    get:
      operationId: auth_google_callback_retrieve
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - auth
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_google_callback_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
        - auth
      responses:
        "200":
          description: No response body
  /api/auth/logout:
    post:
      operationId: auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
        - auth
      security:
        - durinAuth: []
      responses:
        "200":
          description: No response body
  /api/auth/sessions:
    get:
      operationId: auth_sessions_list
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
      tags:
        - auth
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TokenSessions"
          description: ""
  /api/auth/sessions/{id}:
    delete:
      operationId: auth_sessions_destroy
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auth token.
          required: true
      tags:
        - auth
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/connector/{name}/healthcheck:
    get:
      operationId: connector_healthcheck_retrieve
      description:
        "Health Check: if server instance associated with plugin is up
        or not"
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      tags:
        - connector
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginHealthCheckSuccessResponse"
          description: ""
  /api/get_analyzer_configs:
    get:
      operationId: get_analyzer_configs_retrieve
      description: |2-

                Get and parse the `analyzer_config.json` file,
                can be useful if you want to choose the analyzers programmatically
      tags:
        - get_analyzer_configs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzerConfig"
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAnalyzerConfigsFailedResponse"
          description: ""
  /api/get_connector_configs:
    get:
      operationId: get_connector_configs_retrieve
      description: Get and parse the `connector_config.json` file
      tags:
        - get_connector_configs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorConfig"
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectorConfigsFailedResponse"
          description: ""
  /api/get_playbook_configs:
    get:
      operationId: get_playbook_configs_retrieve
      description: Get and parse the `playbook_config.json` file,
      tags:
      - get_playbook_configs
      security:
      - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfig'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlaybookConfigsFailedResponse'
          description: ''
  /api/jobs:
    get:
      operationId: jobs_list
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - name: file_mimetype
        required: false
        in: query
        description: file_mimetype
        schema:
          type: string
      - name: file_name
        required: false
        in: query
        description: file_name
        schema:
          type: string
      - name: finished_analysis_time__gte
        required: false
        in: query
        description: finished_analysis_time__gte
        schema:
          type: string
      - name: finished_analysis_time__lte
        required: false
        in: query
        description: finished_analysis_time__lte
        schema:
          type: string
      - name: is_sample
        required: false
        in: query
        description: is_sample
        schema:
          type: string
      - name: md5
        required: false
        in: query
        description: md5
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: observable_classification
        required: false
        in: query
        description: observable_classification
        schema:
          type: string
          enum:
          - ip
          - url
          - domain
          - hash
          - generic
          - ''
      - name: observable_name
        required: false
        in: query
        description: observable_name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: received_request_time__gte
        required: false
        in: query
        description: received_request_time__gte
        schema:
          type: string
      - name: received_request_time__lte
        required: false
        in: query
        description: received_request_time__lte
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - pending
          - running
          - reported_without_fails
          - reported_with_fails
          - killed
          - failed
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: tlp
        required: false
        in: query
        description: tlp
        schema:
          type: string
          enum:
          - WHITE
          - GREEN
          - AMBER
          - RED
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedJobListList"
          description: ""
  /api/jobs/{job_id}/analyzer/{name}/kill:
    patch:
      operationId: jobs_analyzer_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
        - in: path
          name: job_id
          schema:
            type: string
            pattern: ^\d+$
          required: true
        - in: path
          name: name
          schema:
            type: string
            pattern: ^\w+$
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/{job_id}/analyzer/{name}/retry:
    patch:
      operationId: jobs_analyzer_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
        - in: path
          name: job_id
          schema:
            type: string
            pattern: ^\d+$
          required: true
        - in: path
          name: name
          schema:
            type: string
            pattern: ^\w+$
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/{job_id}/connector/{name}/kill:
    patch:
      operationId: jobs_connector_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
        - in: path
          name: job_id
          schema:
            type: string
            pattern: ^\d+$
          required: true
        - in: path
          name: name
          schema:
            type: string
            pattern: ^\w+$
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/{job_id}/connector/{name}/retry:
    patch:
      operationId: jobs_connector_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
        - in: path
          name: job_id
          schema:
            type: string
            pattern: ^\d+$
          required: true
        - in: path
          name: name
          schema:
            type: string
            pattern: ^\w+$
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/{id}:
    get:
      operationId: jobs_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this job.
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
    delete:
      operationId: jobs_destroy
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this job.
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/{id}/download_sample:
    get:
      operationId: jobs_download_sample_retrieve
      description: Download file/sample associated with a job
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this job.
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ""
        "400":
          description: No response body
  /api/jobs/{id}/kill:
    patch:
      operationId: jobs_kill_partial_update
      description: Kill running job by closing celery tasks and marking as killed
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this job.
          required: true
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/jobs/aggregate/file_mimetype:
    get:
      operationId: jobs_aggregate_file_mimetype_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/jobs/aggregate/md5:
    get:
      operationId: jobs_aggregate_md5_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/jobs/aggregate/observable_classification:
    get:
      operationId: jobs_aggregate_observable_classification_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/jobs/aggregate/observable_name:
    get:
      operationId: jobs_aggregate_observable_name_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/jobs/aggregate/status:
    get:
      operationId: jobs_aggregate_status_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/jobs/aggregate/type:
    get:
      operationId: jobs_aggregate_type_retrieve
      description:
        "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
        - jobs
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: ""
  /api/me/access:
    get:
      operationId: me_access_retrieve
      description: "\n    Returns user's access information.\n    "
      tags:
        - me
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccess"
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIException"
          description: ""
  /api/me/invitations:
    get:
      operationId: me_invitations_list
      description: Only ``list()`` and ``destroy()`` actions.
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
      tags:
        - me
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvitationsList"
          description: ""
  /api/me/invitations/{id}:
    delete:
      operationId: me_invitations_destroy
      description: Only ``list()`` and ``destroy()`` actions.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this invitation.
          required: true
      tags:
        - me
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
  /api/me/invitations/{id}/accept:
    post:
      operationId: me_invitations_accept_create
      description: Accept an invitation by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this invitation.
          required: true
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvitationsList"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InvitationsList"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InvitationsList"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvitationsList"
          description: ""
  /api/me/invitations/{id}/decline:
    post:
      operationId: me_invitations_decline_create
      description: Decline an invitation by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this invitation.
          required: true
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvitationsList"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InvitationsList"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InvitationsList"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvitationsList"
          description: ""
  /api/me/organization:
    get:
      operationId: me_organization_list
      description: Get organization.
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
      tags:
        - me
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
          description: ""
    post:
      operationId: me_organization_create
      description: Create new organization.
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - durinAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
  /api/me/organization/invite:
    post:
      operationId: me_organization_invite_create
      description: |-
        Invite user to organization (accessible only to the organization owner).

        ``POST ~/organization/invite``.
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
  /api/me/organization/leave:
    post:
      operationId: me_organization_leave_create
      description: |-
        Leave organization (accessible only to members).

        ``POST ~/organization/leave``.
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
  /api/me/organization/remove_member:
    post:
      operationId: me_organization_remove_member_create
      description: |-
        Remove user's membership from organization (accessible only to the organization owner).

        ``POST ~/organization/remove_member``.
      tags:
        - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Organization"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
          description: ""
  /api/notification:
    get:
      operationId: notification_list
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - notification
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedNotificationList"
          description: ""
  /api/notification/{id}:
    get:
      operationId: notification_retrieve
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notification.
          required: true
      tags:
        - notification
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
          description: ""
  /api/notification/{id}/mark-as-read:
    post:
      operationId: notification_mark_as_read_create
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notification.
          required: true
      tags:
        - notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notification"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/playbook/analyze_multiple_files:
    post:
      operationId: playbook_analyze_multiple_files_create
      description: This endpoint allows to start a Job related to a file
      tags:
      - playbook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookFileAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaybookFileAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaybookFileAnalysis'
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
          description: ''
  /api/playbook/analyze_multiple_observables:
    post:
      operationId: playbook_analyze_multiple_observables_create
      description: This endpoint allows to start a Job related to an observable
      tags:
      - playbook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
        required: true
      security:
        - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
          description: ''
  /api/playbook/cache_playbook:
    post:
      operationId: playbook_cache_playbook_create
      tags:
      - playbook
      security:
      - durinAuth: []
      responses:
        '200':
          description: No response body
  /api/plugin-config:
    get:
      operationId: plugin_config_list
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - plugin-config
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConfig'
          description: ''
    post:
      operationId: plugin_config_create
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      tags:
      - plugin-config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      security:
      - durinAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
  /api/plugin-config/{id}:
    get:
      operationId: plugin_config_retrieve
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      tags:
      - plugin-config
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    put:
      operationId: plugin_config_update
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      tags:
      - plugin-config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    patch:
      operationId: plugin_config_partial_update
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      tags:
      - plugin-config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ''
    delete:
      operationId: plugin_config_destroy
      description: "\n    REST endpoint to fetch list of PluginConfig or retrieve/delete\
        \ a CustomConfig.\n    Requires authentication. Allows access to only authorized\
        \ CustomConfigs.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plugin config.
        required: true
      tags:
      - plugin-config
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/plugin-disable/:
    get:
      operationId: plugin_disable_retrieve
      description: |-
        This endpoint allows organization owners
            and members to view plugin state.
      tags:
      - plugin-disable
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginStateViewerResponse'
          description: ''
  /api/plugin-disable/{plugin_type}/{plugin_name}/:
    post:
      operationId: plugin_disable_create
      description: This endpoint allows organization owners to toggle plugin state.
      parameters:
      - in: path
        name: plugin_name
        schema:
          type: string
        required: true
      - in: path
        name: plugin_type
        schema:
          type: integer
        required: true
      tags:
      - plugin-disable
      security:
      - durinAuth: []
      responses:
        '201':
          description: No response body
    delete:
      operationId: plugin_disable_destroy
      description: This endpoint allows organization owners to toggle plugin state.
      parameters:
      - in: path
        name: plugin_name
        schema:
          type: string
        required: true
      - in: path
        name: plugin_type
        schema:
          type: integer
        required: true
      tags:
      - plugin-disable
      security:
      - durinAuth: []
      responses:
        '201':
          description: No response body
  /api/tags:
    get:
      operationId: tags_list
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - durinAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}:
    get:
      operationId: tags_retrieve
      description:
        "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - tags
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
          description: ""
    put:
      operationId: tags_update
      description:
        "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Tag"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Tag"
        required: true
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
          description: ""
    patch:
      operationId: tags_partial_update
      description:
        "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedTag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedTag"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedTag"
      security:
        - durinAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
          description: ""
    delete:
      operationId: tags_destroy
      description:
        "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - tags
      security:
        - durinAuth: []
      responses:
        "204":
          description: No response body
components:
  schemas:
    APIException:
      type: object
      properties:
        errors:
          type: object
          additionalProperties: {}
      required:
        - errors
    AnalysisResponse:
      type: object
      properties:
        job_id:
          type: integer
        status:
          type: string
        warnings:
          type: array
          items: {}
        analyzers_running:
          type: array
          items: {}
        connectors_running:
          type: array
          items: {}
        playbooks_running:
          type: array
          items: {}
      required:
      - analyzers_running
      - connectors_running
      - job_id
      - status
    AnalyzerConfig:
      type: object
      description: Serializer for `analyzer_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        description:
          type: string
        config:
          $ref: "#/components/schemas/_Config"
        secrets:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/_Secret"
        params:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/_Param"
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
              nullable: true
            missing_secrets:
              type: array
              items:
                type: string
          required:
            - configured
            - error_message
            - missing_secrets
          readOnly: true
        extends:
          type: string
        type:
          $ref: "#/components/schemas/AnalyzerConfigTypeEnum"
        external_service:
          type: boolean
        leaks_info:
          type: boolean
          default: false
        docker_based:
          type: boolean
          default: false
        run_hash:
          type: boolean
          default: false
        run_hash_type:
          $ref: "#/components/schemas/RunHashTypeEnum"
        supported_filetypes:
          type: array
          items: {}
          default: []
        not_supported_filetypes:
          type: array
          items: {}
          default: []
        observable_supported:
          type: array
          items:
            $ref: "#/components/schemas/ObservableSupportedEnum"
          default: []
      required:
        - config
        - disabled
        - external_service
        - name
        - params
        - python_module
        - secrets
        - type
        - verification
    AnalyzerConfigTypeEnum:
      enum:
        - file
        - observable
      type: string
    AnalyzerReport:
      type: object
      description: AnalyzerReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: "#/components/schemas/Status0b3Enum"
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
            maxLength: 512
        process_time:
          type: number
          format: double
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
        type:
          type: string
          default: analyzer
        parent_playbook:
          type: string
          maxLength: 128
      required:
        - name
        - process_time
        - status
    AskAnalysisAvailabilitySuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: string
          readOnly: true
      required:
        - job_id
        - status
    AskAnalysisAvailabilitySuccessResponseList:
      type: object
      properties:
        count:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/AskAnalysisAvailabilitySuccessResponse"
      required:
      - count
      - results
    BlankEnum:
      enum:
      - ''
    ConfigTypeEnum:
      enum:
      - '1'
      - '2'
      type: string
    ConnectorConfig:
      type: object
      description: Serializer for `connector_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        description:
          type: string
        config:
          $ref: "#/components/schemas/_Config"
        secrets:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/_Secret"
        params:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/_Param"
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
              nullable: true
            missing_secrets:
              type: array
              items:
                type: string
          required:
            - configured
            - error_message
            - missing_secrets
          readOnly: true
        extends:
          type: string
        maximum_tlp:
          $ref: '#/components/schemas/MaximumTlpEnum'
        run_on_failure:
          type: boolean
          default: false
      required:
        - config
        - disabled
        - maximum_tlp
        - name
        - params
        - python_module
        - secrets
        - verification
    ConnectorReport:
      type: object
      description: ConnectorReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: "#/components/schemas/Status0b3Enum"
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
            maxLength: 512
        process_time:
          type: number
          format: double
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
        type:
          type: string
          default: connector
        parent_playbook:
          type: string
          maxLength: 128
      required:
        - name
        - process_time
        - status
    FileAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for File Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: "#/components/schemas/TlpEnum"
        file:
          type: string
          format: uri
        file_name:
          type: string
        file_mimetype:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        tags_labels:
          type: array
          items: {}
      required:
        - file
        - id
    GetAnalyzerConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
        - error
    GetConnectorConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    GetPlaybookConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    InvitationsList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          $ref: "#/components/schemas/Organization"
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: "#/components/schemas/InvitationsListStatusEnum"
      required:
        - created_at
        - id
        - organization
    InvitationsListStatusEnum:
      enum:
        - pending
        - accepted
        - declined
      type: string
    Job:
      type: object
      description: Used for ``retrieve()``
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: "#/components/schemas/User"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          readOnly: true
        analyzer_reports:
          type: array
          items:
            $ref: "#/components/schemas/AnalyzerReport"
          readOnly: true
        connector_reports:
          type: array
          items:
            $ref: "#/components/schemas/ConnectorReport"
          readOnly: true
        permissions:
          type: object
          additionalProperties:
            type: boolean
          readOnly: true
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          oneOf:
          - $ref: '#/components/schemas/ObservableClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: "#/components/schemas/StatusFefEnum"
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        process_time:
          type: number
          format: double
          nullable: true
        tlp:
          $ref: "#/components/schemas/TlpEnum"
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
      required:
      - analyzer_reports
      - connector_reports
      - id
      - md5
      - permissions
      - received_request_time
      - tags
      - user
    JobAvailability:
      type: object
      description: Serializer for ask_analysis_availability
      properties:
        id:
          type: integer
          readOnly: true
        md5:
          type: string
          maxLength: 128
        analyzers:
          type: array
          items: {}
        playbooks:
          type: array
          items: {}
        running_only:
          type: boolean
          default: false
        minutes_ago:
          type: integer
        is_sample:
          type: boolean
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          oneOf:
          - $ref: '#/components/schemas/ObservableClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: "#/components/schemas/StatusFefEnum"
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        process_time:
          type: number
          format: double
          nullable: true
        tlp:
          $ref: "#/components/schemas/TlpEnum"
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
        file:
          type: string
          format: uri
        user:
          type: integer
          nullable: true
        tags:
          type: array
          items:
            type: integer
      required:
        - id
        - md5
        - received_request_time
    JobList:
      type: object
      description: Used for ``list()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: "#/components/schemas/User"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          readOnly: true
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          oneOf:
          - $ref: '#/components/schemas/ObservableClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: "#/components/schemas/StatusFefEnum"
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        playbooks_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        process_time:
          type: number
          format: double
          nullable: true
        tlp:
          $ref: "#/components/schemas/TlpEnum"
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
      required:
      - id
      - md5
      - received_request_time
      - tags
      - user
    MaximumTlpEnum:
      enum:
        - CLEAR
        - GREEN
        - AMBER
        - RED
      type: string
    MultiAnalysisResponseList:
      type: object
      properties:
        count:
          type: boolean
        results:
          type: array
          items:
            $ref: "#/components/schemas/AnalysisResponse"
      required:
      - count
      - results
    MultiJobAvailabilityList:
      type: object
      properties:
        count:
          type: boolean
        results:
          type: array
          items:
            $ref: "#/components/schemas/JobAvailability"
      required:
        - count
        - results
    MultipleFiles:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: uri
        file_names:
          type: array
          items:
            type: string
        file_mimetypes:
          type: array
          items:
            type: string
      required:
        - file_mimetypes
        - file_names
        - files
    MultipleObservable:
      type: object
      properties:
        observables:
          type: array
          items:
            type: array
            items: {}
            maxItems: 2
            minItems: 2
      required:
        - observables
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        read:
          type: boolean
          readOnly: true
      required:
      - body
      - created_at
      - id
      - read
      - title
    ObservableAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for Observable Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        observable_name:
          type: string
        observable_classification:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        tags_labels:
          type: array
          items: {}
      required:
      - id
      - observable_name
    ObservableClassificationEnum:
      enum:
      - ip
      - url
      - domain
      - hash
      - generic
      type: string
    ObservableSupportedEnum:
      enum:
        - ip
        - url
        - domain
        - hash
        - generic
      type: string
    Organization:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        members_count:
          type: integer
          readOnly: true
        owner:
          allOf:
            - $ref: "#/components/schemas/_UserMember"
          readOnly: true
        name:
          type: string
          maxLength: 32
      required:
        - members_count
        - name
        - owner
    PaginatedJobListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        total_pages:
          type: integer
          example: 5
        results:
          type: array
          items:
            $ref: "#/components/schemas/JobList"
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        total_pages:
          type: integer
          example: 5
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PatchedPluginConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: string
          nullable: true
        value:
          type: object
          additionalProperties: {}
        type:
          $ref: '#/components/schemas/Type816Enum'
        config_type:
          $ref: '#/components/schemas/ConfigTypeEnum'
        attribute:
          type: string
          maxLength: 128
        plugin_name:
          type: string
          maxLength: 128
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
    PlaybookConfig:
      type: object
      description: Serializer for `playbook_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          default: ''
        disabled:
          type: boolean
        description:
          type: string
        config:
          type: object
          additionalProperties: {}
          default: {}
        secrets:
          type: object
          additionalProperties: {}
          default: {}
        params:
          type: object
          additionalProperties: {}
          default: {}
        verification:
          type: object
          additionalProperties: {}
          default: {}
        extends:
          type: string
        analyzers:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        connectors:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        supports:
          type: array
          items:
            $ref: '#/components/schemas/SupportsEnum'
          default: []
      required:
      - analyzers
      - connectors
      - description
      - disabled
      - name
    PlaybookFileAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for File Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        file:
          type: string
          format: uri
        file_name:
          type: string
        file_mimetype:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        tags_labels:
          type: array
          items: {}
      required:
      - file
      - id
    PlaybookObservableAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for Observable Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        observable_name:
          type: string
        observable_classification:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        playbooks_requested:
          type: array
          items:
            type: string
            maxLength: 128
        tags_labels:
          type: array
          items: {}
      required:
      - id
      - observable_name
    PluginConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: string
          nullable: true
        value:
          type: object
          additionalProperties: {}
        type:
          $ref: '#/components/schemas/Type816Enum'
        config_type:
          $ref: '#/components/schemas/ConfigTypeEnum'
        attribute:
          type: string
          maxLength: 128
        plugin_name:
          type: string
          maxLength: 128
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attribute
      - config_type
      - id
      - plugin_name
      - type
      - updated_at
      - value
    PluginHealthCheckSuccessResponse:
      type: object
      properties:
        status:
          type: boolean
          nullable: true
      required:
      - status
    PluginStateViewerResponse:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
      required:
      - data
    PluginUpdateSuccessResponse:
      type: object
      properties:
        status:
          type: boolean
        detail:
          type: string
          nullable: true
      required:
      - detail
      - status
    RunHashTypeEnum:
      enum:
        - md5
        - sha256
      type: string
    Status0b3Enum:
      enum:
        - FAILED
        - PENDING
        - RUNNING
        - SUCCESS
        - KILLED
      type: string
    StatusFefEnum:
      enum:
        - pending
        - running
        - reported_without_fails
        - reported_with_fails
        - killed
        - failed
      type: string
    SupportsEnum:
      enum:
      - ip
      - url
      - domain
      - hash
      - generic
      - file
      type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
      required:
        - color
        - id
        - label
    TlpEnum:
      enum:
        - CLEAR
        - GREEN
        - AMBER
        - RED
      type: string
    TokenSessions:
      type: object
      description: |-
        Used in :class:`durin.views.TokenSessionsViewSet`.

        .. versionadded:: 1.0.0
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          description: A unique identification name for the client.
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: boolean
          readOnly: true
        is_current:
          type: boolean
          readOnly: true
        expires_in_str:
          type: string
      required:
      - client
      - created
      - expires_in_str
      - expiry
      - has_expired
      - id
      - is_current
    Type1d0Enum:
      enum:
      - int
      - float
      - str
      - bool
      - list
      - dict
      type: string
    Type816Enum:
      enum:
      - '1'
      - '2'
      type: string
    User:
      type: object
      properties:
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
        - username
    UserAccess:
      type: object
      description: |-
        Used by :class:`~.views.UserAccessView`.

        Ideally, this serializer should be extended inside your
        service's source code adding user relevant information
        and then point to it with the
        ``USER_ACCESS_SERIALIZER`` settings variable.
      properties:
        user:
          type: object
          additionalProperties: {}
          readOnly: true
        access:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
        - access
        - user
    _Config:
      type: object
      description: |-
        To validate `config` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        queue:
          type: string
        soft_time_limit:
          type: integer
      required:
        - queue
        - soft_time_limit
    _Param:
      type: object
      description: |-
        To validate `params` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        value:
          type: string
        type:
          $ref: '#/components/schemas/Type1d0Enum'
        description:
          type: string
          maxLength: 512
      required:
      - description
      - type
      - value
    _Secret:
      type: object
      description: |-
        To validate `secrets` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        env_var_key:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 512
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/Type1d0Enum'
        default:
          type: string
      required:
        - description
        - env_var_key
        - required
    _UserMember:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        username:
          type: string
        full_name:
          type: string
        joined:
          type: string
          format: date-time
      required:
        - full_name
        - joined
        - username
  securitySchemes:
    durinAuth:
      type: apiKey
      in: header
      name: Authorization
      description: "Token-based authentication with required prefix: Token"
