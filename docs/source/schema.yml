openapi: 3.0.3
info:
  title: IntelOwl API specification
  version: 2.5.0
paths:
  /api/analyze_file:
    post:
      operationId: analyze_file_create
      description: This endpoint allows to start a Job related to a file
      tags:
      - analyze_file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAnalysisResponse'
          description: ''
  /api/analyze_observable:
    post:
      operationId: analyze_observable_create
      description: This endpoint allows to start a Job related to an observable
      tags:
      - analyze_observable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableAnalysisResponse'
          description: ''
  /api/analyzer/{name}/healthcheck:
    get:
      operationId: analyzer_healthcheck_retrieve
      description: 'Health Check: if instance associated with plugin is up or not'
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - analyzer
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginHealthCheckSuccessResponse'
          description: ''
  /api/ask_analysis_availability:
    post:
      operationId: ask_analysis_availability_create
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect
      tags:
      - ask_analysis_availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobAvailability'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilitySuccessResponse'
          description: ''
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/logout:
    post:
      operationId: auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/connector/{name}/healthcheck:
    get:
      operationId: connector_healthcheck_retrieve
      description: 'Health Check: if instance associated with plugin is up or not'
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - connector
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginHealthCheckSuccessResponse'
          description: ''
  /api/get_analyzer_configs:
    get:
      operationId: get_analyzer_configs_list
      description: |2-

                Get the uploaded analyzer configuration,
                can be useful if you want to choose the analyzers programmatically
      tags:
      - get_analyzer_configs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyzerConfig'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzerConfigsFailedResponse'
          description: ''
  /api/get_connector_configs:
    get:
      operationId: get_connector_configs_list
      description: Get the uploaded connector configuration
      tags:
      - get_connector_configs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorConfig'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorConfigsFailedResponse'
          description: ''
  /api/job/{job_id}/analyzer/{name}/kill:
    patch:
      operationId: job_analyzer_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/job/{job_id}/analyzer/{name}/retry:
    patch:
      operationId: job_analyzer_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/job/{job_id}/connector/{name}/kill:
    patch:
      operationId: job_connector_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/job/{job_id}/connector/{name}/retry:
    patch:
      operationId: job_connector_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs:
    get:
      operationId: jobs_list
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobList'
          description: ''
  /api/jobs/{id}:
    get:
      operationId: jobs_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{id}/download_sample:
    get:
      operationId: jobs_download_sample_retrieve
      description: Download a sample from a given Job ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          description: No response body
  /api/jobs/{id}/kill:
    patch:
      operationId: jobs_kill_partial_update
      description: Kill running job by closing celery tasks and marking as killed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/tags:
    get:
      operationId: tags_list
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - durinAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}:
    get:
      operationId: tags_retrieve
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: tags_update
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AnalyzerConfig:
      type: object
      description: Serializer for `analyzer_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        config:
          type: object
          additionalProperties: {}
        secrets:
          type: object
          additionalProperties: {}
        description:
          type: string
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
            missing_secrets:
              type: array
              items:
                type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        external_service:
          type: boolean
        leaks_info:
          type: boolean
          default: false
        docker_based:
          type: boolean
          default: false
        run_hash:
          type: boolean
          default: false
        run_hash_type:
          $ref: '#/components/schemas/RunHashTypeEnum'
        supported_filetypes:
          type: array
          items: {}
          default: []
        not_supported_filetypes:
          type: array
          items: {}
          default: []
        observable_supported:
          type: array
          items:
            $ref: '#/components/schemas/ObservableSupportedEnum'
          default: []
      required:
      - config
      - disabled
      - external_service
      - name
      - python_module
      - type
      - verification
    AnalyzerReport:
      type: object
      description: AnalyzerReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/Status0b3Enum'
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
        process_time:
          type: number
          format: float
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
      - name
      - process_time
      - status
    AskAnalysisAvailabilitySuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: string
          readOnly: true
      required:
      - job_id
      - status
    ConnectorConfig:
      type: object
      description: Serializer for `connector_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        config:
          type: object
          additionalProperties: {}
        secrets:
          type: object
          additionalProperties: {}
        description:
          type: string
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
            missing_secrets:
              type: array
              items:
                type: string
          readOnly: true
        maximum_tlp:
          $ref: '#/components/schemas/MaximumTlpEnum'
      required:
      - config
      - disabled
      - maximum_tlp
      - name
      - python_module
      - verification
    ConnectorReport:
      type: object
      description: ConnectorReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/Status0b3Enum'
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
        process_time:
          type: number
          format: float
          readOnly: true
        start_time:
          type: string
          format: date-time
      required:
      - name
      - process_time
      - status
    FileAnalysis:
      type: object
      description: |-
        Job model's serializer for File Analysis.
        Used for create()
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          maxLength: 50
        md5:
          type: string
          maxLength: 32
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        file:
          type: string
          format: uri
        file_name:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        tags_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - file
      - file_name
      - id
      - md5
      - tags_id
    FileAnalysisResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: integer
      required:
      - job_id
      - status
    GetAnalyzerConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    GetConnectorConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    Job:
      type: object
      description: |-
        Job model's serializer.
        Used for retrieve()
      properties:
        id:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        analyzer_reports:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzerReport'
          readOnly: true
        connector_reports:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorReport'
          readOnly: true
        source:
          type: string
          maxLength: 50
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        analyzers_requested:
          type: array
          items:
            type: string
        connectors_requested:
          type: array
          items:
            type: string
        analyzers_to_execute:
          type: array
          items:
            type: string
        connectors_to_execute:
          type: array
          items:
            type: string
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        errors:
          type: array
          items:
            type: string
          nullable: true
      required:
      - analyzer_reports
      - connector_reports
      - id
      - md5
      - received_request_time
      - tags
    JobAvailability:
      type: object
      description: Serializer for ask_analysis_availability
      properties:
        id:
          type: integer
          readOnly: true
        md5:
          type: string
          maxLength: 128
        analyzers:
          type: array
          items: {}
        running_only:
          type: boolean
          default: false
        source:
          type: string
          maxLength: 50
        is_sample:
          type: boolean
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        analyzers_requested:
          type: array
          items:
            type: string
        connectors_requested:
          type: array
          items:
            type: string
        analyzers_to_execute:
          type: array
          items:
            type: string
        connectors_to_execute:
          type: array
          items:
            type: string
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        errors:
          type: array
          items:
            type: string
          nullable: true
        file:
          type: string
          format: uri
        tags:
          type: array
          items:
            type: integer
      required:
      - id
      - md5
      - received_request_time
    JobList:
      type: object
      description: |-
        Job model's list serializer.
        Used for list()
      properties:
        id:
          type: integer
          readOnly: true
        is_sample:
          type: boolean
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        process_time:
          type: number
          format: float
          readOnly: true
        no_of_analyzers_executed:
          type: string
          readOnly: true
        no_of_connectors_executed:
          type: string
          readOnly: true
      required:
      - id
      - no_of_analyzers_executed
      - no_of_connectors_executed
      - process_time
      - tags
    MaximumTlpEnum:
      enum:
      - WHITE
      - GREEN
      - AMBER
      - RED
      type: string
    ObservableAnalysis:
      type: object
      description: |-
        Job model's serializer for Observable Analysis.
        Used for create()
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          maxLength: 50
        md5:
          type: string
          maxLength: 32
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        observable_name:
          type: string
        observable_classification:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        tags_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - id
      - md5
      - observable_classification
      - observable_name
      - tags_id
    ObservableAnalysisResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: integer
      required:
      - job_id
      - status
    ObservableSupportedEnum:
      enum:
      - ip
      - url
      - domain
      - hash
      - generic
      type: string
    PatchedTag:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
    PluginHealthCheckSuccessResponse:
      type: object
      properties:
        status:
          type: boolean
          nullable: true
      required:
      - status
    RunHashTypeEnum:
      enum:
      - md5
      - sha256
      type: string
    Status0b3Enum:
      enum:
      - FAILED
      - PENDING
      - RUNNING
      - SUCCESS
      - KILLED
      type: string
    StatusFefEnum:
      enum:
      - pending
      - running
      - reported_without_fails
      - reported_with_fails
      - killed
      - failed
      type: string
    Tag:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
      required:
      - color
      - id
      - label
    TlpEnum:
      enum:
      - WHITE
      - GREEN
      - AMBER
      - RED
      type: string
    TypeEnum:
      enum:
      - file
      - observable
      type: string
  securitySchemes:
    durinAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token-based authentication with required prefix: Token'
