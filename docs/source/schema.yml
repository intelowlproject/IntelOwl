openapi: 3.0.3
info:
  title: IntelOwl API specification
  version: 4.0.1
paths:
  /api/analyze_file:
    post:
      operationId: analyze_file_create
      description: This endpoint allows to start a Job related for a single File.
        Retained for retro-compatibility
      tags:
      - analyze_file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileAnalysis'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
          description: ''
  /api/analyze_multiple_files:
    post:
      operationId: analyze_multiple_files_create
      description: This endpoint allows to start Jobs related to multiple Files
      tags:
      - analyze_multiple_files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponseList'
          description: ''
  /api/playbook/analyze_multiple_files:
    post:
      operationId: analyze_multiple_files_create
      description: This endpoint allows to start playbook Jobs related to multiple Files
      tags:
      - playbooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipleFiles'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponsePlaybooksList'
          description: ''
  /api/analyze_multiple_observables:
    post:
      operationId: analyze_multiple_observables_create
      description: |-
        This endpoint allows to start playbook Jobs related to multiple observables.
                         Observable parameter must be composed like this:
                         [(<observable_classification>, <observable_name>), ...]
      tags:
      - analyze_multiple_observables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleObservable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultipleObservable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipleObservable'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponseList'
          description: ''
  /api/playbook/analyze_multiple_observables:
    post:
      operationId: analyze_multiple_observables_create
      description: |-
        This endpoint allows to start Jobs related to multiple observables.
                         Observable parameter must be composed like this:
                         [(<observable_classification>, <observable_name>), ...]
      tags:
      - playbooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlaybookObservableAnalysis'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAnalysisResponsePlaybooksList'
          description: ''
  /api/analyze_observable:
    post:
      operationId: analyze_observable_create
      description: This endpoint allows to start a Job related to an observable. Retained
        for retro-compatibility
      tags:
      - analyze_observable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableAnalysis'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
          description: ''
  /api/analyzer/{name}/healthcheck:
    get:
      operationId: analyzer_healthcheck_retrieve
      description: 'Health Check: if server instance associated with plugin is up
        or not'
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - analyzer
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginHealthCheckSuccessResponse'
          description: ''
  /api/ask_analysis_availability:
    post:
      operationId: ask_analysis_availability_create
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect
      tags:
      - ask_analysis_availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobAvailability'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilitySuccessResponse'
          description: ''
  /api/ask_multi_analysis_availability:
    post:
      operationId: ask_multi_analysis_availability_create
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect.
            NOTE: This API is similar to ask_analysis_availability, but it allows multiple
            md5s to be checked at the same time.
      tags:
      - ask_multi_analysis_availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiJobAvailabilityList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultiJobAvailabilityList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiJobAvailabilityList'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilitySuccessResponseList'
          description: ''
  /api/auth/apiaccess:
    get:
      operationId: auth_apiaccess_retrieve
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAccessToken'
          description: ''
    post:
      operationId: auth_apiaccess_create
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIAccessToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIAccessToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIAccessToken'
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAccessToken'
          description: ''
    delete:
      operationId: auth_apiaccess_destroy
      description: |-
        Durin's APIAccessTokenView.

        - ``GET`` -> get token-client pair info
        - ``POST`` -> create and get token-client pair info
        - ``DELETE`` -> delete existing API access token

        .. versionadded:: 1.0.0
      tags:
      - auth
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        (if not overwritten) ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/logout:
    post:
      operationId: auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
      - auth
      security:
      - durinAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/sessions:
    get:
      operationId: auth_sessions_list
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - auth
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenSessions'
          description: ''
  /api/auth/sessions/{id}:
    delete:
      operationId: auth_sessions_destroy
      description: |-
        Durin's TokenSessionsViewSet.

        - Returns list of active sessions of authed user.
        - Only ``list()`` and ``delete()`` operations.

        .. versionadded:: 1.0.0
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auth token.
        required: true
      tags:
      - auth
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/connector/{name}/healthcheck:
    get:
      operationId: connector_healthcheck_retrieve
      description: 'Health Check: if server instance associated with plugin is up
        or not'
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - connector
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginHealthCheckSuccessResponse'
          description: ''
  /api/get_analyzer_configs:
    get:
      operationId: get_analyzer_configs_retrieve
      description: |2-

                Get and parse the `analyzer_config.json` file,
                can be useful if you want to choose the analyzers programmatically
      tags:
      - get_analyzer_configs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfig'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzerConfigsFailedResponse'
          description: ''
  /api/get_connector_configs:
    get:
      operationId: get_connector_configs_retrieve
      description: Get and parse the `connector_config.json` file
      tags:
      - get_connector_configs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorConfig'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorConfigsFailedResponse'
          description: ''
  /api/jobs:
    get:
      operationId: jobs_list
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobListList'
          description: ''
  /api/jobs/{job_id}/analyzer/{name}/kill:
    patch:
      operationId: jobs_analyzer_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{job_id}/analyzer/{name}/retry:
    patch:
      operationId: jobs_analyzer_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{job_id}/connector/{name}/kill:
    patch:
      operationId: jobs_connector_kill_partial_update
      description: Kill running plugin by closing celery task and marking as killed
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{job_id}/connector/{name}/retry:
    patch:
      operationId: jobs_connector_retry_partial_update
      description: Retry a plugin run if it failed/was killed previously
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{id}:
    get:
      operationId: jobs_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{id}/download_sample:
    get:
      operationId: jobs_download_sample_retrieve
      description: Download file/sample associated with a job
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          description: No response body
  /api/jobs/{id}/kill:
    patch:
      operationId: jobs_kill_partial_update
      description: Kill running job by closing celery tasks and marking as killed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/aggregate/file_mimetype:
    get:
      operationId: jobs_aggregate_file_mimetype_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/aggregate/file_name:
    get:
      operationId: jobs_aggregate_file_name_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/aggregate/observable_classification:
    get:
      operationId: jobs_aggregate_observable_classification_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/aggregate/observable_name:
    get:
      operationId: jobs_aggregate_observable_name_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/aggregate/status:
    get:
      operationId: jobs_aggregate_status_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/aggregate/type:
    get:
      operationId: jobs_aggregate_type_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve/delete a\
        \ job with job ID.\n    Requires authentication.\n    "
      tags:
      - jobs
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/me/access:
    get:
      operationId: me_access_retrieve
      description: "\n    Returns user's access information.\n    "
      tags:
      - me
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccess'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: ''
  /api/me/invitations:
    get:
      operationId: me_invitations_list
      description: Only ``list()`` and ``destroy()`` actions.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - me
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvitationsList'
          description: ''
  /api/me/invitations/{id}:
    delete:
      operationId: me_invitations_destroy
      description: Only ``list()`` and ``destroy()`` actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - me
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
  /api/me/invitations/{id}/accept:
    post:
      operationId: me_invitations_accept_create
      description: Accept an invitation by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationsList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationsList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationsList'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationsList'
          description: ''
  /api/me/invitations/{id}/decline:
    post:
      operationId: me_invitations_decline_create
      description: Decline an invitation by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationsList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationsList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationsList'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationsList'
          description: ''
  /api/me/organization:
    get:
      operationId: me_organization_list
      description: Get organization.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - me
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
    post:
      operationId: me_organization_create
      description: Create new organization.
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - durinAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/me/organization/invite:
    post:
      operationId: me_organization_invite_create
      description: |-
        Invite user to organization (accessible only to the organization owner).

        ``POST ~/organization/invite``.
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/me/organization/leave:
    post:
      operationId: me_organization_leave_create
      description: |-
        Leave organization (accessible only to members).

        ``POST ~/organization/leave``.
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/me/organization/remove_member:
    post:
      operationId: me_organization_remove_member_create
      description: |-
        Remove user's membership from organization (accessible only to the organization owner).

        ``POST ~/organization/remove_member``.
      tags:
      - me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/notification:
    get:
      operationId: notification_list
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notification
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/notification/{id}:
    get:
      operationId: notification_retrieve
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notification
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notification/{id}/mark-as-read:
    post:
      operationId: notification_mark_as_read_create
      description: Only ``list()`` and ``retrieve()`` actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/tags:
    get:
      operationId: tags_list
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - durinAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}:
    get:
      operationId: tags_retrieve
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: tags_update
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - durinAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      description: "\n    REST endpoint to perform CRUD operations on ``Tag`` model.\n\
        \    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - durinAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    APIAccessToken:
      type: object
      description: |-
        Used in :class:`durin.views.APIAccessTokenView`.

        .. versionadded:: 1.0.0
      properties:
        client:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: boolean
          readOnly: true
        expires_in_str:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
          description: Token is auto-generated on save.
      required:
      - client
      - created
      - expires_in_str
      - expiry
      - has_expired
      - token
    APIException:
      type: object
      properties:
        errors:
          type: object
          additionalProperties: {}
      required:
      - errors
    AnalysisResponse:
      type: object
      properties:
        job_id:
          type: integer
        status:
          type: string
        warnings:
          type: array
          items: {}
        analyzers_running:
          type: array
          items: {}
        connectors_running:
          type: array
          items: {}
      required:
      - analyzers_running
      - connectors_running
      - job_id
      - status
    PlaybooksAnalysisResponse:
      type: object
      properties:
        job_id:
          type: integer
        status:
          type: string
        warnings:
          type: array
          items: {}
        analyzers_running:
          type: array
          items: {}
        connectors_running:
          type: array
          items: {}
        playbooks_running:
          type: array
          items: {}
      required:
      - analyzers_running
      - connectors_running
      - playbooks_running
      - job_id
      - status
    AnalyzerConfig:
      type: object
      description: Serializer for `analyzer_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        description:
          type: string
        config:
          $ref: '#/components/schemas/_Config'
        secrets:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/_Secret'
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/_Param'
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
              nullable: true
            missing_secrets:
              type: array
              items:
                type: string
          required:
          - configured
          - error_message
          - missing_secrets
          readOnly: true
        type:
          $ref: '#/components/schemas/AnalyzerConfigTypeEnum'
        external_service:
          type: boolean
        leaks_info:
          type: boolean
          default: false
        docker_based:
          type: boolean
          default: false
        run_hash:
          type: boolean
          default: false
        run_hash_type:
          $ref: '#/components/schemas/RunHashTypeEnum'
        supported_filetypes:
          type: array
          items: {}
          default: []
        not_supported_filetypes:
          type: array
          items: {}
          default: []
        observable_supported:
          type: array
          items:
            $ref: '#/components/schemas/ObservableSupportedEnum'
          default: []
      required:
      - config
      - disabled
      - external_service
      - name
      - params
      - python_module
      - secrets
      - type
      - verification
    AnalyzerConfigTypeEnum:
      enum:
      - file
      - observable
      type: string
    AnalyzerReport:
      type: object
      description: AnalyzerReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/Status0b3Enum'
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
            maxLength: 512
        process_time:
          type: number
          format: float
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
        type:
          type: string
          default: analyzer
      required:
      - name
      - process_time
      - status
    AskAnalysisAvailabilitySuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: string
          readOnly: true
      required:
      - job_id
      - status
    AskAnalysisAvailabilitySuccessResponseList:
      type: object
      properties:
        count:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/AskAnalysisAvailabilitySuccessResponse'
      required:
      - count
      - results
    ConnectorConfig:
      type: object
      description: Serializer for `connector_config.json`.
      properties:
        name:
          type: string
        python_module:
          type: string
          maxLength: 128
        disabled:
          type: boolean
        description:
          type: string
        config:
          $ref: '#/components/schemas/_Config'
        secrets:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/_Secret'
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/_Param'
        verification:
          type: object
          properties:
            configured:
              type: boolean
            error_message:
              type: string
              nullable: true
            missing_secrets:
              type: array
              items:
                type: string
          required:
          - configured
          - error_message
          - missing_secrets
          readOnly: true
        maximum_tlp:
          $ref: '#/components/schemas/MaximumTlpEnum'
      required:
      - config
      - disabled
      - maximum_tlp
      - name
      - params
      - python_module
      - secrets
      - verification
    ConnectorReport:
      type: object
      description: ConnectorReport model's serializer.
      properties:
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/Status0b3Enum'
        report:
          type: object
          additionalProperties: {}
        errors:
          type: array
          items:
            type: string
            maxLength: 512
        process_time:
          type: number
          format: float
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
        type:
          type: string
          default: connector
      required:
      - name
      - process_time
      - status
    FileAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for File Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        file:
          type: string
          format: uri
        file_name:
          type: string
        file_mimetype:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        tags_labels:
          type: array
          items: {}
      required:
      - file
      - id
    GetAnalyzerConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    GetConnectorConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    InvitationsList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          $ref: '#/components/schemas/Organization'
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/InvitationsListStatusEnum'
      required:
      - created_at
      - id
      - organization
    InvitationsListStatusEnum:
      enum:
      - pending
      - accepted
      - declined
      type: string
    Job:
      type: object
      description: Used for ``retrieve()``
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        process_time:
          type: number
          format: double
        analyzer_reports:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzerReport'
          readOnly: true
        connector_reports:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorReport'
          readOnly: true
        permissions:
          type: object
          additionalProperties:
            type: boolean
          readOnly: true
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
      required:
      - analyzer_reports
      - connector_reports
      - id
      - md5
      - permissions
      - process_time
      - received_request_time
      - tags
      - user
    JobAvailability:
      type: object
      description: Serializer for ask_analysis_availability
      properties:
        id:
          type: integer
          readOnly: true
        md5:
          type: string
          maxLength: 128
        analyzers:
          type: array
          items: {}
        running_only:
          type: boolean
          default: false
        minutes_ago:
          type: integer
        is_sample:
          type: boolean
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
        file:
          type: string
          format: uri
        user:
          type: integer
          nullable: true
        tags:
          type: array
          items:
            type: integer
      required:
      - id
      - md5
      - received_request_time
    JobList:
      type: object
      description: Used for ``list()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        process_time:
          type: number
          format: double
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusFefEnum'
        analyzers_requested:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_requested:
          type: array
          items:
            type: string
            maxLength: 128
        analyzers_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        connectors_to_execute:
          type: array
          items:
            type: string
            maxLength: 128
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        errors:
          type: array
          items:
            type: string
            maxLength: 900
          nullable: true
      required:
      - id
      - md5
      - process_time
      - received_request_time
      - tags
      - user
    MaximumTlpEnum:
      enum:
      - WHITE
      - GREEN
      - AMBER
      - RED
      type: string
    MultiAnalysisResponseList:
      type: object
      properties:
        count:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResponse'
      required:
      - count
      - results
    MultiAnalysisResponsePlaybooksList:
      type: object
      properties:
        count:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlaybooksAnalysisResponse'
      required:
      - count
      - results
    MultiJobAvailabilityList:
      type: object
      properties:
        count:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobAvailability'
      required:
      - count
      - results
    MultipleFiles:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: uri
        file_names:
          type: array
          items:
            type: string
        file_mimetypes:
          type: array
          items:
            type: string
      required:
      - file_mimetypes
      - file_names
      - files
    MultipleObservable:
      type: object
      properties:
        observables:
          type: array
          items:
            type: array
            items: {}
            maxItems: 2
            minItems: 2
      required:
      - observables
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        read:
          type: boolean
          readOnly: true
      required:
      - body
      - created_at
      - id
      - read
      - title
    ObservableAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for Observable Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        observable_name:
          type: string
        observable_classification:
          type: string
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        analyzers_requested:
          type: array
          items: {}
        connectors_requested:
          type: array
          items: {}
        tags_labels:
          type: array
          items: {}
      required:
      - id
      - observable_name
    PlaybookObservableAnalysis:
      type: object
      description: |-
        ``Job`` model's serializer for Observable Analysis.
        Used for ``create()``.
      properties:
        id:
          type: integer
          readOnly: true
        tlp:
          $ref: '#/components/schemas/TlpEnum'
        observables:
          type: array
          items:
            type: array
            items: {}
            maxItems: 2
            minItems: 2
        runtime_configuration:
          type: object
          additionalProperties: {}
          writeOnly: true
          default: {}
        playbooks_requested:
          type: array
          items: {}
        tags_labels:
          type: array
          items: {}
      required:
      - id
      - observable_name

    ObservableSupportedEnum:
      enum:
      - ip
      - url
      - domain
      - hash
      - generic
      type: string
    Organization:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        members_count:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/_UserMember'
          readOnly: true
        name:
          type: string
          maxLength: 32
      required:
      - members_count
      - name
      - owner
    PaginatedJobListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        total_pages:
          type: integer
          example: 5
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobList'
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        total_pages:
          type: integer
          example: 5
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
    PluginHealthCheckSuccessResponse:
      type: object
      properties:
        status:
          type: boolean
          nullable: true
      required:
      - status
    RunHashTypeEnum:
      enum:
      - md5
      - sha256
      type: string
    Status0b3Enum:
      enum:
      - FAILED
      - PENDING
      - RUNNING
      - SUCCESS
      - KILLED
      type: string
    StatusFefEnum:
      enum:
      - pending
      - running
      - reported_without_fails
      - reported_with_fails
      - killed
      - failed
      type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
      required:
      - color
      - id
      - label
    TlpEnum:
      enum:
      - WHITE
      - GREEN
      - AMBER
      - RED
      type: string
    TokenSessions:
      type: object
      description: |-
        Used in :class:`durin.views.TokenSessionsViewSet`.

        .. versionadded:: 1.0.0
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: boolean
          readOnly: true
        is_current:
          type: boolean
          readOnly: true
        expires_in_str:
          type: string
      required:
      - client
      - created
      - expires_in_str
      - expiry
      - has_expired
      - id
      - is_current
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - username
    UserAccess:
      type: object
      description: |-
        Used by :class:`~.views.UserAccessView`.

        Ideally, this serializer should be extended inside your
        service's source code adding user relevant information
        and then point to it with the
        ``USER_ACCESS_SERIALIZER`` settings variable.
      properties:
        user:
          type: object
          additionalProperties: {}
          readOnly: true
        access:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - access
      - user
    _Config:
      type: object
      description: |-
        To validate `config` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        queue:
          type: string
        soft_time_limit:
          type: integer
      required:
      - queue
      - soft_time_limit
    _Param:
      type: object
      description: |-
        To validate `params` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        value:
          type: string
        type:
          $ref: '#/components/schemas/_ParamTypeEnum'
        description:
          type: string
          maxLength: 512
      required:
      - description
      - type
      - value
    _ParamTypeEnum:
      enum:
      - int
      - float
      - str
      - bool
      - list
      - dict
      type: string
    _Secret:
      type: object
      description: |-
        To validate `secrets` attr.
        Used for `analyzer_config.json` and `connector_config.json` files.
      properties:
        env_var_key:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 512
        required:
          type: boolean
      required:
      - description
      - env_var_key
      - required
    _UserMember:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        username:
          type: string
        full_name:
          type: string
        joined:
          type: string
          format: date-time
      required:
      - full_name
      - joined
      - username
  securitySchemes:
    durinAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token-based authentication with required prefix: Token'
