openapi: 3.0.3
info:
  title: 'IntelOwl API specification'
  version: 2.5.0
paths:
  /api/ask_analysis_availability:
    get:
      operationId: api_ask_analysis_availability_retrieve
      description: |2-

            This is useful to avoid repeating the same analysis multiple times.
            By default this API checks if there are existing analysis related to the md5 in
            status "running" or "reported_without_fails"
            Also, you need to specify the analyzers needed because, otherwise, it is
            highly probable that you won't get all the results that you expect
      parameters:
      - in: query
        name: analyzers_needed
        schema:
          type: object
          additionalProperties: {}
        description: |2-

                      Specify analyzers needed.
                      It requires either this or run_all_available_analyzers
      - in: query
        name: md5
        schema:
          type: string
        description: md5 of the sample or observable to look for
      - in: query
        name: run_all_available_analyzers
        schema:
          type: boolean
        description: If we are looking for an analysis executed with this flag set
      - in: query
        name: running_only
        schema:
          type: boolean
        description: |2-

                      Check only for running analysis,
                      default False, any value is True
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilitySuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilityInsufficientDataResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskAnalysisAvailabilityErrorResponse'
          description: ''
  /api/auth/login:
    post:
      operationId: api_auth_login_create
      description: |-
        Durin's Login View.

        This view will return a JSON response when valid ``username``, ``password`` and
        if not overwritten ``client`` fields are POSTed to the view using
        form data or JSON.

        It uses the default serializer provided by
        Django-Rest-Framework (``rest_framework.authtoken.serializers.AuthTokenSerializer``)
        to validate the user credentials.

        It is possible to customize LoginView behaviour by overriding the following
        helper methods:
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/logout:
    post:
      operationId: api_auth_logout_create
      description: |-
        Durin's Logout View.

        This view accepts only a post request with an empty body.
        It responds to Durin Token Authentication. On a successful request,

        1. The token used to authenticate is deleted from
           the database and can no longer be used to authenticate.

        2. :meth:`django.contrib.auth.signals.user_logged_out` is called.

        :returns: 204 (No content)
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/download_sample:
    get:
      operationId: api_download_sample_retrieve
      description: This method is used to download a sample from a Job ID
      parameters:
      - in: query
        name: job_id
        schema:
          type: integer
        description: Job Id
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadSampleInsufficientData'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadSampleInsufficientData'
          description: ''
  /api/get_analyzer_configs:
    get:
      operationId: api_get_analyzer_configs_retrieve
      description: |2-

        Get the uploaded analyzer configuration,
        can be useful if you want to choose the analyzers programmatically
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzerConfigsSuccessResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzerConfigsFailedResponse'
          description: ''
  /api/jobs:
    get:
      operationId: api_jobs_list
      description: "\n    REST endpoint to fetch list of jobs or retrieve a job with\
        \ job ID.\n    Requires authentication.\n    "
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobList'
          description: ''
  /api/jobs/{id}:
    get:
      operationId: api_jobs_retrieve
      description: "\n    REST endpoint to fetch list of jobs or retrieve a job with\
        \ job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: api_jobs_destroy
      description: "\n    REST endpoint to fetch list of jobs or retrieve a job with\
        \ job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/jobs/{id}/kill:
    patch:
      operationId: api_jobs_kill_partial_update
      description: "\n    REST endpoint to fetch list of jobs or retrieve a job with\
        \ job ID.\n    Requires authentication.\n    "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/send_analysis_request:
    post:
      operationId: api_send_analysis_request_create
      description: |2-

            This endpoint allows to start a Job related to a file or an observable
      parameters:
      - in: query
        name: analyzers_requested
        schema:
          type: object
          additionalProperties: {}
        description: list of requested analyzer to run, before filters
      - in: query
        name: disable_external_analyzers
        schema:
          type: boolean
        description: |2-

                      Default False, enable it if you want to exclude external analyzers
      - in: query
        name: file
        schema:
          type: string
          format: binary
        description: required if is_sample=True, the binary
      - in: query
        name: file_mimetype
        schema:
          type: string
        description: optional, the binary mimetype, calculated by default
      - in: query
        name: file_name
        schema:
          type: string
        description: optional if is_sample=True, the binary name
      - in: query
        name: force_privacy
        schema:
          type: boolean
        description: |2-

                      Default False,
                      enable it if you want to avoid to run analyzers with privacy issues
      - in: query
        name: is_sample
        schema:
          type: boolean
        description: is a sample (file) or an observable (domain, ip, ...)
      - in: query
        name: md5
        schema:
          type: string
        description: md5 of the item to analyze
      - in: query
        name: observable_classification
        schema:
          type: string
        description: required if is_sample=False, (domain, ip, ...)
      - in: query
        name: observable_name
        schema:
          type: string
        description: required if is_sample=False, the observable value
      - in: query
        name: private
        schema:
          type: boolean
        description: |2-

                      Default False,
                      enable it to allow view permissions to only requesting user's groups.
      - in: query
        name: run_all_available_analyzers
        schema:
          type: boolean
        description: default False
      - in: query
        name: runtime_configuration
        schema:
          type: object
          additionalProperties: {}
        description: |2-

                      Default {}, contains additional parameters for particular analyzers
      - in: query
        name: tags_id
        schema:
          type: object
          additionalProperties: {}
        description: list of id's of tags to apply to job
      - in: query
        name: test
        schema:
          type: boolean
        description: disable analysis for API testing
      tags:
      - api
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAnalysisRequestSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAnalysisRequestInsufficientData'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAnalysisRequestError'
          description: ''
  /api/tags:
    get:
      operationId: api_tags_list
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: api_tags_create
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}:
    get:
      operationId: api_tags_retrieve
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_tags_update
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_tags_partial_update
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_tags_destroy
      description: |2-

            REST endpoint to pefrom CRUD operations on Job tags.
            Requires authentication.
            POST/PUT/DELETE requires model/object level permission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
components:
  schemas:
    AskAnalysisAvailabilityErrorResponse:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    AskAnalysisAvailabilityInsufficientDataResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    AskAnalysisAvailabilitySuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: string
          readOnly: true
      required:
      - job_id
      - status
    DownloadSampleInsufficientData:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    GetAnalyzerConfigsFailedResponse:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    GetAnalyzerConfigsSuccessResponse:
      type: object
      properties:
        analyzers_config:
          type: object
          additionalProperties: {}
      required:
      - analyzers_config
    Job:
      type: object
      description: |-
        Job model's serializer.
        Used for create(), retrieve()
      properties:
        id:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        tags_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        source:
          type: string
          maxLength: 50
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusEnum'
        analyzers_requested:
          type: array
          items:
            type: string
        run_all_available_analyzers:
          type: boolean
        analyzers_to_execute:
          type: array
          items:
            type: string
        analysis_reports:
          type: object
          additionalProperties: {}
          nullable: true
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        force_privacy:
          type: boolean
        disable_external_analyzers:
          type: boolean
        errors:
          type: array
          items:
            type: string
          nullable: true
        file:
          type: string
          format: uri
          writeOnly: true
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - md5
      - received_request_time
      - tags
      - tags_id
    JobList:
      type: object
      description: |-
        Job model's list serializer.
        Used for list()
      properties:
        id:
          type: integer
          readOnly: true
        is_sample:
          type: boolean
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusEnum'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        process_time:
          type: string
          readOnly: true
        no_of_analyzers_executed:
          type: string
          readOnly: true
      required:
      - id
      - no_of_analyzers_executed
      - process_time
      - tags
    PatchedJob:
      type: object
      description: |-
        Job model's serializer.
        Used for create(), retrieve()
      properties:
        id:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        tags_id:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        source:
          type: string
          maxLength: 50
        is_sample:
          type: boolean
        md5:
          type: string
          maxLength: 32
        observable_name:
          type: string
          maxLength: 512
        observable_classification:
          type: string
          maxLength: 12
        file_name:
          type: string
          maxLength: 512
        file_mimetype:
          type: string
          maxLength: 80
        status:
          $ref: '#/components/schemas/StatusEnum'
        analyzers_requested:
          type: array
          items:
            type: string
        run_all_available_analyzers:
          type: boolean
        analyzers_to_execute:
          type: array
          items:
            type: string
        analysis_reports:
          type: object
          additionalProperties: {}
          nullable: true
        received_request_time:
          type: string
          format: date-time
          readOnly: true
        finished_analysis_time:
          type: string
          format: date-time
          nullable: true
        force_privacy:
          type: boolean
        disable_external_analyzers:
          type: boolean
        errors:
          type: array
          items:
            type: string
          nullable: true
        file:
          type: string
          format: uri
          writeOnly: true
        runtime_configuration:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedTag:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
    SendAnalysisRequestError:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SendAnalysisRequestInsufficientData:
      type: object
      properties:
        error:
          type: string
          readOnly: true
      required:
      - error
    SendAnalysisRequestSuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
        job_id:
          type: integer
      required:
      - job_id
      - status
    StatusEnum:
      enum:
      - pending
      - running
      - reported_without_fails
      - reported_with_fails
      - failed
      - killed
      type: string
    Tag:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
      required:
      - color
      - id
      - label
